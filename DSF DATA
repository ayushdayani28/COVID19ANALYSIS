{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DSF DATA","provenance":[],"collapsed_sections":["1TSNh1LOz_La","uCEybtbKlMkH","VQtpicBsZnMj","38ZTwr5UZYRP","I4Me-iz8ZfKq"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"IeUsY9f170bC","executionInfo":{"status":"error","timestamp":1639040524956,"user_tz":300,"elapsed":21712,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01923599687458481968"}},"outputId":"1ec3c001-36fd-4b08-9523-df003e665c97"},"source":["# First mount your drive before running these cells. \n","# Create a folder for the this HW and change to that dir\n","from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","%cd /content/drive/MyDrive/DSF \\PROJECT/"],"execution_count":1,"outputs":[{"output_type":"error","ename":"MessageError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-1de461ae3db2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Create a folder for the this HW and change to that dir\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmagic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'cd /content/drive/MyDrive/DSF \\\\PROJECT/'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, use_metadata_server)\u001b[0m\n\u001b[1;32m    111\u001b[0m       \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout_ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    112\u001b[0m       \u001b[0muse_metadata_server\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_metadata_server\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 113\u001b[0;31m       ephemeral=ephemeral)\n\u001b[0m\u001b[1;32m    114\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    115\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, use_metadata_server, ephemeral)\u001b[0m\n\u001b[1;32m    134\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    135\u001b[0m     _message.blocking_request(\n\u001b[0;32m--> 136\u001b[0;31m         'request_auth', request={'authType': 'dfs_ephemeral'}, timeout_sec=None)\n\u001b[0m\u001b[1;32m    137\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    138\u001b[0m   \u001b[0mmountpoint\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_os\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanduser\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    173\u001b[0m   request_id = send_request(\n\u001b[1;32m    174\u001b[0m       request_type, request, parent=parent, expect_reply=True)\n\u001b[0;32m--> 175\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    104\u001b[0m         reply.get('colab_msg_id') == message_id):\n\u001b[1;32m    105\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-cKSEE2IRVK","executionInfo":{"status":"ok","timestamp":1638636685879,"user_tz":300,"elapsed":351,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"e0e442bf-e39e-44f4-b57f-4ea1dcecdeaa"},"source":["%ls"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" covid.csv     'DSF DATA DOCS.gdoc'      politics.csv        Vaccination.csv\n"," covid.gsheet   Education.xlsx           POPDEN.csv\n"," CSV_80.csv     HESITANCY_SVI_RACE.csv   readme.txt\n","'DSF DATA'      politics_1.xlsx          Unemployment.xlsx\n"]}]},{"cell_type":"markdown","metadata":{"id":"L4v011Y9WsTJ"},"source":["Sodapy is used to collect data directly from CDC website through api"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zNQY4NLEWNxF","executionInfo":{"status":"ok","timestamp":1638636690098,"user_tz":300,"elapsed":4222,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"cdd0c008-7bb2-4e6e-9e43-3c470d4cb001"},"source":["pip install sodapy"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting sodapy\n","  Downloading sodapy-2.1.0-py2.py3-none-any.whl (14 kB)\n","Requirement already satisfied: requests>=2.20.0 in /usr/local/lib/python3.7/dist-packages (from sodapy) (2.23.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20.0->sodapy) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20.0->sodapy) (2021.10.8)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20.0->sodapy) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.20.0->sodapy) (3.0.4)\n","Installing collected packages: sodapy\n","Successfully installed sodapy-2.1.0\n"]}]},{"cell_type":"code","metadata":{"id":"hrT2aaEDrnoe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636699506,"user_tz":300,"elapsed":9434,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"7f7819fd-095f-438d-a823-b1bd4ee44a19"},"source":["pip install pmdarima"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pmdarima\n","  Downloading pmdarima-1.8.4-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (1.4 MB)\n","\u001b[K     |████████████████████████████████| 1.4 MB 4.1 MB/s \n","\u001b[?25hRequirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (1.24.3)\n","Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (1.0.1)\n","Requirement already satisfied: Cython!=0.29.18,>=0.29 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (0.29.24)\n","Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (57.4.0)\n","Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (1.1.5)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (1.1.0)\n","Requirement already satisfied: numpy>=1.19.3 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (1.19.5)\n","Collecting statsmodels!=0.12.0,>=0.11\n","  Downloading statsmodels-0.13.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.8 MB)\n","\u001b[K     |████████████████████████████████| 9.8 MB 20.9 MB/s \n","\u001b[?25hRequirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.7/dist-packages (from pmdarima) (1.4.1)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->pmdarima) (2.8.2)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->pmdarima) (2018.9)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.19->pmdarima) (1.15.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.22->pmdarima) (3.0.0)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.7/dist-packages (from statsmodels!=0.12.0,>=0.11->pmdarima) (0.5.2)\n","Installing collected packages: statsmodels, pmdarima\n","  Attempting uninstall: statsmodels\n","    Found existing installation: statsmodels 0.10.2\n","    Uninstalling statsmodels-0.10.2:\n","      Successfully uninstalled statsmodels-0.10.2\n","Successfully installed pmdarima-1.8.4 statsmodels-0.13.1\n"]}]},{"cell_type":"markdown","metadata":{"id":"1TSNh1LOz_La"},"source":["##HESITANCY AND ALL"]},{"cell_type":"markdown","metadata":{"id":"H8iQjGW03NJz"},"source":["https://data.cdc.gov/Vaccinations/Vaccine-Hesitancy-for-COVID-19-County-and-local-es/q9mh-h2tw/data"]},{"cell_type":"code","metadata":{"id":"Vk0jkSe_IZX4"},"source":["# import pandas as pd\n","#%cd drive/MyDrive/DSF\\ PROJECT\n","# usecol= ['FIPS Code', 'County Name', 'State', 'Estimated hesitant or unsure', 'Estimated strongly hesitant', 'Social Vulnerability Index (SVI)', 'Percent Hispanic', 'Percent non-Hispanic American Indian/Alaska Native', 'Percent non-Hispanic Asian', 'Percent non-Hispanic Black', 'Percent non-Hispanic Native Hawaiian/Pacific Islander', 'Percent non-Hispanic White']\n","# dfmain = pd.read_csv('HESITANCY_SVI_RACE.csv', usecols= usecol)\n","# mapper={'FIPS Code':\"FIPS\", 'County Name':\"County\", 'State':\"State\", 'Estimated hesitant or unsure':\"HESITANT_UNS\", 'Estimated strongly hesitant':\"HESITANT_S\", 'Social Vulnerability Index (SVI)':\"SVI\", 'Percent Hispanic':\"Hispanic\", 'Percent non-Hispanic American Indian/Alaska Native':\"AIAN\", 'Percent non-Hispanic Asian':\"Asian\", 'Percent non-Hispanic Black':\"Black\", 'Percent non-Hispanic Native Hawaiian/Pacific Islander':\"NHPI\", 'Percent non-Hispanic White':\"White\"}\n","# dfmain.rename(mapper, inplace =True, axis=1)\n","\n","#static Data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d6yFwdkEweY_","executionInfo":{"status":"ok","timestamp":1638636748045,"user_tz":300,"elapsed":48556,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"9f08f9db-cf72-4c8e-d2e1-2b92e29ca932"},"source":["#!/usr/bin/env python\n","\n","# make sure to install these packages before running:\n","# pip install pandas\n","# pip install sodapy\n","import pandas as pd\n","from sodapy import Socrata\n","\n","# Unauthenticated client only works with public data sets. Note 'None'\n","# in place of application token, and no username or password:\n","client = Socrata(\"data.cdc.gov\", None)\n","\n","# Example authenticated client (needed for non-public datasets):\n","# client = Socrata(data.cdc.gov,\n","#                  MyAppToken,\n","#                  userame=\"user@example.com\",\n","#                  password=\"AFakePassword\")\n","\n","# First 2000 results, returned as JSON from API / converted to Python list of\n","# dictionaries by sodapy.\n","results = client.get(\"q9mh-h2tw\", limit=2000000)\n","\n","# Convert to pandas DataFrame\n","res = pd.DataFrame.from_records(results)\n","#Dynamic Data"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:root:Requests made without an app_token will be subject to strict throttling limits.\n"]}]},{"cell_type":"markdown","metadata":{"id":"mMVdKkuKyPiH"},"source":["The data contains information about Race hesitancy(%), overall hesitancy(%), FIPS, County name, State name."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vMcE5tcQwvG1","executionInfo":{"status":"ok","timestamp":1638636748047,"user_tz":300,"elapsed":80,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"f02044e5-6c3a-4194-c95a-051b9864a412"},"source":["dfmain = res[['fips_code','county_name','state','estimated_hesitant_or_unsure', 'estimated_strongly_hesitant',\n","       'social_vulnerability_index','percent_hispanic', 'percent_non_hispanic_american',\n","       'percent_non_hispanic_asian', 'percent_non_hispanic_black',\n","       'percent_non_hispanic_native', 'percent_non_hispanic_white']]\n","mapper={'fips_code':\"FIPS\", 'county Name':\"County\", 'state':\"State\", 'estimated_hesitant_or_unsure':\"HESITANT_UNS\", 'estimated_strongly_hesitant':\"HESITANT_S\", 'social_vulnerability_index':\"SVI\",\n","        'percent_hispanic':\"Hispanic\", 'percent_non_hispanic_american':\"AIAN\", 'percent_non_hispanic_asian':\"Asian\", 'percent_non_hispanic_black':\"Black\", 'percent_non_hispanic_native':\"NHPI\",\n","        'percent_non_hispanic_white':\"White\"}\n","dfmain.rename(mapper, inplace =True, axis=1)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yUeEx_YeLyBq","executionInfo":{"status":"ok","timestamp":1638636748048,"user_tz":300,"elapsed":70,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"cc21f51c-7570-4bbd-e556-000d521d7062"},"source":["dfmain.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3142, 12)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RyytpRJBygKV","executionInfo":{"status":"ok","timestamp":1638636748051,"user_tz":300,"elapsed":66,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"0f666feb-4fc8-4591-b1f4-edbcc2189521"},"source":["dfmain"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1121</td>\n","      <td>Talladega County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.235</td>\n","      <td>0.1368</td>\n","      <td>0.87</td>\n","      <td>0.0229</td>\n","      <td>0.0043</td>\n","      <td>0.0061</td>\n","      <td>0.3237</td>\n","      <td>0.0003</td>\n","      <td>0.6263</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1131</td>\n","      <td>Wilcox County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.2357</td>\n","      <td>0.1337</td>\n","      <td>0.93</td>\n","      <td>0.0053</td>\n","      <td>0.0009</td>\n","      <td>0.0003</td>\n","      <td>0.6938</td>\n","      <td>0</td>\n","      <td>0.2684</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1129</td>\n","      <td>Washington County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.2357</td>\n","      <td>0.1337</td>\n","      <td>0.73</td>\n","      <td>0.0146</td>\n","      <td>0.0731</td>\n","      <td>0.0025</td>\n","      <td>0.2354</td>\n","      <td>0</td>\n","      <td>0.6495</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1133</td>\n","      <td>Winston County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.2313</td>\n","      <td>0.1379</td>\n","      <td>0.7</td>\n","      <td>0.0315</td>\n","      <td>0.0034</td>\n","      <td>0.0016</td>\n","      <td>0.0073</td>\n","      <td>0.0005</td>\n","      <td>0.937</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3137</th>\n","      <td>55079</td>\n","      <td>Milwaukee County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2144</td>\n","      <td>0.088</td>\n","      <td>0.81</td>\n","      <td>0.15</td>\n","      <td>0.0047</td>\n","      <td>0.0428</td>\n","      <td>0.2606</td>\n","      <td>0.0002</td>\n","      <td>0.5124</td>\n","    </tr>\n","    <tr>\n","      <th>3138</th>\n","      <td>55121</td>\n","      <td>Trempealeau County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2126</td>\n","      <td>0.0959</td>\n","      <td>0.28</td>\n","      <td>0.084</td>\n","      <td>0.0034</td>\n","      <td>0.0043</td>\n","      <td>0.0051</td>\n","      <td>0</td>\n","      <td>0.8953</td>\n","    </tr>\n","    <tr>\n","      <th>3139</th>\n","      <td>56001</td>\n","      <td>Albany County, Wyoming</td>\n","      <td>WYOMING</td>\n","      <td>0.2673</td>\n","      <td>0.1405</td>\n","      <td>0.25</td>\n","      <td>0.0953</td>\n","      <td>0.0091</td>\n","      <td>0.0327</td>\n","      <td>0.015</td>\n","      <td>0.0003</td>\n","      <td>0.8248</td>\n","    </tr>\n","    <tr>\n","      <th>3140</th>\n","      <td>55067</td>\n","      <td>Langlade County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2007</td>\n","      <td>0.0906</td>\n","      <td>0.35</td>\n","      <td>0.0197</td>\n","      <td>0.0069</td>\n","      <td>0.0022</td>\n","      <td>0.0125</td>\n","      <td>0.0002</td>\n","      <td>0.9383</td>\n","    </tr>\n","    <tr>\n","      <th>3141</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3142 rows × 12 columns</p>\n","</div>"],"text/plain":["       FIPS                    county_name      State  ...   Black    NHPI   White\n","0      1123     Tallapoosa County, Alabama    ALABAMA  ...  0.2697       0  0.6887\n","1      1121      Talladega County, Alabama    ALABAMA  ...  0.3237  0.0003  0.6263\n","2      1131         Wilcox County, Alabama    ALABAMA  ...  0.6938       0  0.2684\n","3      1129     Washington County, Alabama    ALABAMA  ...  0.2354       0  0.6495\n","4      1133        Winston County, Alabama    ALABAMA  ...  0.0073  0.0005   0.937\n","...     ...                            ...        ...  ...     ...     ...     ...\n","3137  55079    Milwaukee County, Wisconsin  WISCONSIN  ...  0.2606  0.0002  0.5124\n","3138  55121  Trempealeau County, Wisconsin  WISCONSIN  ...  0.0051       0  0.8953\n","3139  56001         Albany County, Wyoming    WYOMING  ...   0.015  0.0003  0.8248\n","3140  55067     Langlade County, Wisconsin  WISCONSIN  ...  0.0125  0.0002  0.9383\n","3141  55099        Price County, Wisconsin  WISCONSIN  ...  0.0083  0.0085  0.9407\n","\n","[3142 rows x 12 columns]"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"uCEybtbKlMkH"},"source":["##POPULATION DENSITY"]},{"cell_type":"code","metadata":{"id":"hMW-3OgSNLC2"},"source":["#static Data\n","popcol= ['GEOID', 'NAME', 'State', 'B01001_calc_PopDensity']\n","popden = pd.read_csv('POPDEN.csv', usecols = popcol)\n","mapperpop = {'GEOID':\"FIPS\", 'NAME':\"County\", 'State':\"State\", 'B01001_calc_PopDensity':\"POPDEN\"}\n","popden.rename(mapperpop, inplace=True, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6XOExMTJ1esm"},"source":["popden['FIPS'] = popden['FIPS'].apply(lambda x: int(x))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"736hdImuV8qp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636748904,"user_tz":300,"elapsed":21,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"f955d897-e966-4bc6-9e20-0ae71e68186d"},"source":["type(popden['FIPS'].loc[1])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"o7Iv7PN5Rme_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636748906,"user_tz":300,"elapsed":15,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"87f2e68d-f79b-499f-9bdf-817250a70461"},"source":["popden.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3220, 4)"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"RZqU7IlPlRRZ"},"source":["####UNEMPLOYMENT"]},{"cell_type":"code","metadata":{"id":"DbZ9j7AjR2dv"},"source":["unempcol = ['LAUS', 'County', 'Unemp_rate']\n","unemp= pd.read_excel('Unemployment.xlsx', usecols=unempcol)\n","unemp.rename({'LAUS':'FIPS'}, inplace=True, axis=1)\n","unemp['FIPS'] = unemp['FIPS'].apply(lambda x : int(x[2:7]))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8TwqME9yVzFl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636749915,"user_tz":300,"elapsed":19,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"5a8746d3-3812-4efe-f121-3a8bda6088d7"},"source":["unemp['FIPS'].value_counts().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3219"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"SFzGL6diZIZw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636749916,"user_tz":300,"elapsed":15,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"f325bd6f-6834-4c39-d1b9-019b715d97db"},"source":["unemp['FIPS'][0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1001"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"iAD7KVqtXv0F","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636749918,"user_tz":300,"elapsed":15,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"5b4f052d-d475-44d0-f90c-9c98125dd698"},"source":["unemp.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3219, 3)"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","metadata":{"id":"VQtpicBsZnMj"},"source":["##EDUCATION"]},{"cell_type":"markdown","metadata":{"id":"_zUV7YLC1yt5"},"source":["Contains education level details for each county. Seperated in 4 bins.\n","LHSD - Less than High school or Diploma\n","HSD - High School or Diploma\n","CAD - College or Associate Degree\n","BDH - Bachelors Degree or Higher\n","\n","All data is in percentage."]},{"cell_type":"code","metadata":{"id":"o4kcetT-WE3X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636754632,"user_tz":300,"elapsed":4727,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"26e0751b-7f5c-4ca6-b425-a672b2f68870"},"source":["edcols=['FIPS','State','County','B','LHSD',\t'HSD',\t'CAD',\t'BDH']\n","ed=pd.read_excel('Education.xlsx', usecols=edcols)\n","ed"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>B</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>US</td>\n","      <td>United States</td>\n","      <td>NaN</td>\n","      <td>11.998918</td>\n","      <td>26.956844</td>\n","      <td>28.898697</td>\n","      <td>32.145542</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000</td>\n","      <td>AL</td>\n","      <td>Alabama</td>\n","      <td>NaN</td>\n","      <td>13.819302</td>\n","      <td>30.800268</td>\n","      <td>29.912098</td>\n","      <td>25.468332</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>AL</td>\n","      <td>Autauga County</td>\n","      <td>2.0</td>\n","      <td>11.483395</td>\n","      <td>33.588459</td>\n","      <td>28.356571</td>\n","      <td>26.571573</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1003</td>\n","      <td>AL</td>\n","      <td>Baldwin County</td>\n","      <td>4.0</td>\n","      <td>9.193843</td>\n","      <td>27.659616</td>\n","      <td>31.284081</td>\n","      <td>31.862459</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1005</td>\n","      <td>AL</td>\n","      <td>Barbour County</td>\n","      <td>6.0</td>\n","      <td>26.786907</td>\n","      <td>35.604542</td>\n","      <td>26.029837</td>\n","      <td>11.578713</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3278</th>\n","      <td>72145</td>\n","      <td>PR</td>\n","      <td>Vega Baja Municipio</td>\n","      <td>1.0</td>\n","      <td>28.428238</td>\n","      <td>26.225822</td>\n","      <td>24.123638</td>\n","      <td>21.222300</td>\n","    </tr>\n","    <tr>\n","      <th>3279</th>\n","      <td>72147</td>\n","      <td>PR</td>\n","      <td>Vieques Municipio</td>\n","      <td>7.0</td>\n","      <td>28.773281</td>\n","      <td>39.177906</td>\n","      <td>14.049454</td>\n","      <td>17.999357</td>\n","    </tr>\n","    <tr>\n","      <th>3280</th>\n","      <td>72149</td>\n","      <td>PR</td>\n","      <td>Villalba Municipio</td>\n","      <td>2.0</td>\n","      <td>21.993263</td>\n","      <td>38.366028</td>\n","      <td>19.727892</td>\n","      <td>19.912819</td>\n","    </tr>\n","    <tr>\n","      <th>3281</th>\n","      <td>72151</td>\n","      <td>PR</td>\n","      <td>Yabucoa Municipio</td>\n","      <td>1.0</td>\n","      <td>29.048897</td>\n","      <td>25.715004</td>\n","      <td>27.233078</td>\n","      <td>18.003019</td>\n","    </tr>\n","    <tr>\n","      <th>3282</th>\n","      <td>72153</td>\n","      <td>PR</td>\n","      <td>Yauco Municipio</td>\n","      <td>3.0</td>\n","      <td>26.556698</td>\n","      <td>33.272095</td>\n","      <td>15.529844</td>\n","      <td>24.641363</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3283 rows × 8 columns</p>\n","</div>"],"text/plain":["       FIPS State               County  ...        HSD        CAD        BDH\n","0         0    US        United States  ...  26.956844  28.898697  32.145542\n","1      1000    AL              Alabama  ...  30.800268  29.912098  25.468332\n","2      1001    AL       Autauga County  ...  33.588459  28.356571  26.571573\n","3      1003    AL       Baldwin County  ...  27.659616  31.284081  31.862459\n","4      1005    AL       Barbour County  ...  35.604542  26.029837  11.578713\n","...     ...   ...                  ...  ...        ...        ...        ...\n","3278  72145    PR  Vega Baja Municipio  ...  26.225822  24.123638  21.222300\n","3279  72147    PR    Vieques Municipio  ...  39.177906  14.049454  17.999357\n","3280  72149    PR   Villalba Municipio  ...  38.366028  19.727892  19.912819\n","3281  72151    PR    Yabucoa Municipio  ...  25.715004  27.233078  18.003019\n","3282  72153    PR      Yauco Municipio  ...  33.272095  15.529844  24.641363\n","\n","[3283 rows x 8 columns]"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"-naqIoUTWl2D"},"source":["ed.dropna(subset= ['B'],axis=0, inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cojhGSa9W5RX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636754638,"user_tz":300,"elapsed":66,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"8add356e-4c1e-48b5-eb3d-4791f43ebb6a"},"source":["ed"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>B</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>AL</td>\n","      <td>Autauga County</td>\n","      <td>2.0</td>\n","      <td>11.483395</td>\n","      <td>33.588459</td>\n","      <td>28.356571</td>\n","      <td>26.571573</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1003</td>\n","      <td>AL</td>\n","      <td>Baldwin County</td>\n","      <td>4.0</td>\n","      <td>9.193843</td>\n","      <td>27.659616</td>\n","      <td>31.284081</td>\n","      <td>31.862459</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1005</td>\n","      <td>AL</td>\n","      <td>Barbour County</td>\n","      <td>6.0</td>\n","      <td>26.786907</td>\n","      <td>35.604542</td>\n","      <td>26.029837</td>\n","      <td>11.578713</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1007</td>\n","      <td>AL</td>\n","      <td>Bibb County</td>\n","      <td>1.0</td>\n","      <td>20.942602</td>\n","      <td>44.878773</td>\n","      <td>23.800098</td>\n","      <td>10.378526</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1009</td>\n","      <td>AL</td>\n","      <td>Blount County</td>\n","      <td>1.0</td>\n","      <td>19.509438</td>\n","      <td>33.422131</td>\n","      <td>33.975021</td>\n","      <td>13.093413</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3278</th>\n","      <td>72145</td>\n","      <td>PR</td>\n","      <td>Vega Baja Municipio</td>\n","      <td>1.0</td>\n","      <td>28.428238</td>\n","      <td>26.225822</td>\n","      <td>24.123638</td>\n","      <td>21.222300</td>\n","    </tr>\n","    <tr>\n","      <th>3279</th>\n","      <td>72147</td>\n","      <td>PR</td>\n","      <td>Vieques Municipio</td>\n","      <td>7.0</td>\n","      <td>28.773281</td>\n","      <td>39.177906</td>\n","      <td>14.049454</td>\n","      <td>17.999357</td>\n","    </tr>\n","    <tr>\n","      <th>3280</th>\n","      <td>72149</td>\n","      <td>PR</td>\n","      <td>Villalba Municipio</td>\n","      <td>2.0</td>\n","      <td>21.993263</td>\n","      <td>38.366028</td>\n","      <td>19.727892</td>\n","      <td>19.912819</td>\n","    </tr>\n","    <tr>\n","      <th>3281</th>\n","      <td>72151</td>\n","      <td>PR</td>\n","      <td>Yabucoa Municipio</td>\n","      <td>1.0</td>\n","      <td>29.048897</td>\n","      <td>25.715004</td>\n","      <td>27.233078</td>\n","      <td>18.003019</td>\n","    </tr>\n","    <tr>\n","      <th>3282</th>\n","      <td>72153</td>\n","      <td>PR</td>\n","      <td>Yauco Municipio</td>\n","      <td>3.0</td>\n","      <td>26.556698</td>\n","      <td>33.272095</td>\n","      <td>15.529844</td>\n","      <td>24.641363</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3221 rows × 8 columns</p>\n","</div>"],"text/plain":["       FIPS State               County  ...        HSD        CAD        BDH\n","2      1001    AL       Autauga County  ...  33.588459  28.356571  26.571573\n","3      1003    AL       Baldwin County  ...  27.659616  31.284081  31.862459\n","4      1005    AL       Barbour County  ...  35.604542  26.029837  11.578713\n","5      1007    AL          Bibb County  ...  44.878773  23.800098  10.378526\n","6      1009    AL        Blount County  ...  33.422131  33.975021  13.093413\n","...     ...   ...                  ...  ...        ...        ...        ...\n","3278  72145    PR  Vega Baja Municipio  ...  26.225822  24.123638  21.222300\n","3279  72147    PR    Vieques Municipio  ...  39.177906  14.049454  17.999357\n","3280  72149    PR   Villalba Municipio  ...  38.366028  19.727892  19.912819\n","3281  72151    PR    Yabucoa Municipio  ...  25.715004  27.233078  18.003019\n","3282  72153    PR      Yauco Municipio  ...  33.272095  15.529844  24.641363\n","\n","[3221 rows x 8 columns]"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"968urMO_ZQM7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636754904,"user_tz":300,"elapsed":328,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"3db184ac-9e38-49d7-cf3a-0a68c2f8cd5c"},"source":["ed[\"FIPS\"].value_counts().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3221"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"38ZTwr5UZYRP"},"source":["##VACCINATION"]},{"cell_type":"markdown","metadata":{"id":"vyIrO4Et3tYV"},"source":["This data contains information about county level vaccination for both single and both doses(in percentage) and Metro status of that county. It is a time-series data beginning around 1st JAN 2021 till latest date."]},{"cell_type":"markdown","metadata":{"id":"RYGgDgal5G6B"},"source":["https://data.cdc.gov/Vaccinations/COVID-19-Vaccinations-in-the-United-States-County/8xkx-amqh"]},{"cell_type":"code","metadata":{"id":"GwdpMIRJq__4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636837516,"user_tz":300,"elapsed":82631,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"1bc14e1c-e331-47e0-fdbb-caa78bc6d117"},"source":["#DYNAMIC DATA\n","\n","#!/usr/bin/env python\n","\n","# make sure to install these packages before running:\n","# pip install pandas\n","# pip install sodapy\n","\n","import pandas as pd\n","from sodapy import Socrata\n","\n","# Unauthenticated client only works with public data sets. Note 'None'\n","# in place of application token, and no username or password:\n","client = Socrata(\"data.cdc.gov\", None)\n","\n","results = client.get(\"8xkx-amqh\", limit=200000000)\n","vacols= ['FIPS','Date','Recip_County', 'Recip_State', 'Series_Complete_Pop_Pct','Administered_Dose1_Pop_Pct', 'Metro_status']\n","# Convert to pandas DataFrame\n","results_df = pd.DataFrame.from_records(results)\n","vac = results_df[['fips','date','recip_county', 'recip_state', 'series_complete_pop_pct','administered_dose1_pop_pct', 'metro_status']]\n","vac.rename({'fips':'FIPS','date':'Date','recip_county':'Recip_County', 'recip_state': 'Recip_State', 'series_complete_pop_pct':'Series_Complete_Pop_Pct','administered_dose1_pop_pct':'Administered_Dose1_Pop_Pct', 'metro_status': 'Metro_status'}, inplace =True, axis = 1)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:root:Requests made without an app_token will be subject to strict throttling limits.\n","/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"]}]},{"cell_type":"code","metadata":{"id":"C1RpUqtguAH5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636837883,"user_tz":300,"elapsed":380,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"3ab3c39b-d2e3-4e78-9343-1fffbf4b0912"},"source":["vac['Date']=vac['Date'].apply(lambda x: x[:10])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","metadata":{"id":"9oZkejf3X3Iw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636837888,"user_tz":300,"elapsed":36,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"ee5de254-cca2-43fd-d753-5552a66ae904"},"source":["vac[vac['Date']=='2021-11-04']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>95207</th>\n","      <td>30109</td>\n","      <td>2021-11-04</td>\n","      <td>Wibaux County</td>\n","      <td>MT</td>\n","      <td>25.9</td>\n","      <td>28.4</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>95208</th>\n","      <td>51147</td>\n","      <td>2021-11-04</td>\n","      <td>Prince Edward County</td>\n","      <td>VA</td>\n","      <td>30.4</td>\n","      <td>35</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>95209</th>\n","      <td>48045</td>\n","      <td>2021-11-04</td>\n","      <td>Briscoe County</td>\n","      <td>TX</td>\n","      <td>39.5</td>\n","      <td>43.3</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>95210</th>\n","      <td>55035</td>\n","      <td>2021-11-04</td>\n","      <td>Eau Claire County</td>\n","      <td>WI</td>\n","      <td>56</td>\n","      <td>58.4</td>\n","      <td>Metro</td>\n","    </tr>\n","    <tr>\n","      <th>95211</th>\n","      <td>01119</td>\n","      <td>2021-11-04</td>\n","      <td>Sumter County</td>\n","      <td>AL</td>\n","      <td>44.7</td>\n","      <td>58.5</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>98485</th>\n","      <td>19045</td>\n","      <td>2021-11-04</td>\n","      <td>Clinton County</td>\n","      <td>IA</td>\n","      <td>49.6</td>\n","      <td>53.3</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>98486</th>\n","      <td>16079</td>\n","      <td>2021-11-04</td>\n","      <td>Shoshone County</td>\n","      <td>ID</td>\n","      <td>38.3</td>\n","      <td>42</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>98487</th>\n","      <td>05019</td>\n","      <td>2021-11-04</td>\n","      <td>Clark County</td>\n","      <td>AR</td>\n","      <td>44.7</td>\n","      <td>51.4</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>98488</th>\n","      <td>37039</td>\n","      <td>2021-11-04</td>\n","      <td>Cherokee County</td>\n","      <td>NC</td>\n","      <td>50.1</td>\n","      <td>57.6</td>\n","      <td>Non-metro</td>\n","    </tr>\n","    <tr>\n","      <th>98489</th>\n","      <td>05053</td>\n","      <td>2021-11-04</td>\n","      <td>Grant County</td>\n","      <td>AR</td>\n","      <td>41.4</td>\n","      <td>48.1</td>\n","      <td>Metro</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3283 rows × 7 columns</p>\n","</div>"],"text/plain":["        FIPS        Date  ... Administered_Dose1_Pop_Pct Metro_status\n","95207  30109  2021-11-04  ...                       28.4    Non-metro\n","95208  51147  2021-11-04  ...                         35    Non-metro\n","95209  48045  2021-11-04  ...                       43.3    Non-metro\n","95210  55035  2021-11-04  ...                       58.4        Metro\n","95211  01119  2021-11-04  ...                       58.5    Non-metro\n","...      ...         ...  ...                        ...          ...\n","98485  19045  2021-11-04  ...                       53.3    Non-metro\n","98486  16079  2021-11-04  ...                         42    Non-metro\n","98487  05019  2021-11-04  ...                       51.4    Non-metro\n","98488  37039  2021-11-04  ...                       57.6    Non-metro\n","98489  05053  2021-11-04  ...                       48.1        Metro\n","\n","[3283 rows x 7 columns]"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"MfQnNssc5LjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636837891,"user_tz":300,"elapsed":35,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"a8397d64-8d49-46c2-aec3-570854390e4e"},"source":["vac['Date'][0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'2021-12-03'"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"cj_ZXO2C3Hh9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636837892,"user_tz":300,"elapsed":33,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"c10ab07a-7c10-4403-d682-24120d3fc82c"},"source":["type(vac['Date'].loc(0))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.indexing._LocIndexer"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","metadata":{"id":"8pEUf-RUZR4D"},"source":["##POLITICS"]},{"cell_type":"markdown","metadata":{"id":"1KCs5xw26bmZ"},"source":["Political Data "]},{"cell_type":"code","metadata":{"id":"E2SnXQL4gEts","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636839468,"user_tz":300,"elapsed":1606,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"fb30051d-851a-4fe2-ee76-f8e78eb53da8"},"source":["polcol=['year','State','state_po','County','FIPS','party','candidatevotes','totalvotes']\n","pol = pd.read_csv('politics.csv', usecols=polcol)\n","pol"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>State</th>\n","      <th>state_po</th>\n","      <th>County</th>\n","      <th>FIPS</th>\n","      <th>party</th>\n","      <th>candidatevotes</th>\n","      <th>totalvotes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2000</td>\n","      <td>ALABAMA</td>\n","      <td>AL</td>\n","      <td>AUTAUGA</td>\n","      <td>1001.0</td>\n","      <td>DEMOCRAT</td>\n","      <td>4942.0</td>\n","      <td>17208.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2000</td>\n","      <td>ALABAMA</td>\n","      <td>AL</td>\n","      <td>AUTAUGA</td>\n","      <td>1001.0</td>\n","      <td>REPUBLICAN</td>\n","      <td>11993.0</td>\n","      <td>17208.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2000</td>\n","      <td>ALABAMA</td>\n","      <td>AL</td>\n","      <td>AUTAUGA</td>\n","      <td>1001.0</td>\n","      <td>GREEN</td>\n","      <td>160.0</td>\n","      <td>17208.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>ALABAMA</td>\n","      <td>AL</td>\n","      <td>AUTAUGA</td>\n","      <td>1001.0</td>\n","      <td>OTHER</td>\n","      <td>113.0</td>\n","      <td>17208.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2000</td>\n","      <td>ALABAMA</td>\n","      <td>AL</td>\n","      <td>BALDWIN</td>\n","      <td>1003.0</td>\n","      <td>DEMOCRAT</td>\n","      <td>13997.0</td>\n","      <td>56480.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>72612</th>\n","      <td>2020</td>\n","      <td>WYOMING</td>\n","      <td>WY</td>\n","      <td>WASHAKIE</td>\n","      <td>56043.0</td>\n","      <td>REPUBLICAN</td>\n","      <td>3245.0</td>\n","      <td>4032.0</td>\n","    </tr>\n","    <tr>\n","      <th>72613</th>\n","      <td>2020</td>\n","      <td>WYOMING</td>\n","      <td>WY</td>\n","      <td>WESTON</td>\n","      <td>56045.0</td>\n","      <td>DEMOCRAT</td>\n","      <td>360.0</td>\n","      <td>3560.0</td>\n","    </tr>\n","    <tr>\n","      <th>72614</th>\n","      <td>2020</td>\n","      <td>WYOMING</td>\n","      <td>WY</td>\n","      <td>WESTON</td>\n","      <td>56045.0</td>\n","      <td>LIBERTARIAN</td>\n","      <td>46.0</td>\n","      <td>3560.0</td>\n","    </tr>\n","    <tr>\n","      <th>72615</th>\n","      <td>2020</td>\n","      <td>WYOMING</td>\n","      <td>WY</td>\n","      <td>WESTON</td>\n","      <td>56045.0</td>\n","      <td>OTHER</td>\n","      <td>47.0</td>\n","      <td>3560.0</td>\n","    </tr>\n","    <tr>\n","      <th>72616</th>\n","      <td>2020</td>\n","      <td>WYOMING</td>\n","      <td>WY</td>\n","      <td>WESTON</td>\n","      <td>56045.0</td>\n","      <td>REPUBLICAN</td>\n","      <td>3107.0</td>\n","      <td>3560.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>72617 rows × 8 columns</p>\n","</div>"],"text/plain":["       year    State state_po  ...        party  candidatevotes totalvotes\n","0      2000  ALABAMA       AL  ...     DEMOCRAT          4942.0    17208.0\n","1      2000  ALABAMA       AL  ...   REPUBLICAN         11993.0    17208.0\n","2      2000  ALABAMA       AL  ...        GREEN           160.0    17208.0\n","3      2000  ALABAMA       AL  ...        OTHER           113.0    17208.0\n","4      2000  ALABAMA       AL  ...     DEMOCRAT         13997.0    56480.0\n","...     ...      ...      ...  ...          ...             ...        ...\n","72612  2020  WYOMING       WY  ...   REPUBLICAN          3245.0     4032.0\n","72613  2020  WYOMING       WY  ...     DEMOCRAT           360.0     3560.0\n","72614  2020  WYOMING       WY  ...  LIBERTARIAN            46.0     3560.0\n","72615  2020  WYOMING       WY  ...        OTHER            47.0     3560.0\n","72616  2020  WYOMING       WY  ...   REPUBLICAN          3107.0     3560.0\n","\n","[72617 rows x 8 columns]"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"1ej-sz4WhBmq"},"source":["pol2020 = pol[pol['year']==2020]\n","pparty = pd.DataFrame()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nLtLfKB3ejOY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636839477,"user_tz":300,"elapsed":71,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"a22008dd-fe17-4eb3-d2db-df84cb938b40"},"source":["pol2020[(pol2020['year']==2020) & (pol2020['party']=='DEMOCRAT')]['FIPS'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["45001.0    6\n","45071.0    6\n","45045.0    6\n","45019.0    6\n","45011.0    6\n","          ..\n","17055.0    1\n","47095.0    1\n","30015.0    1\n","42117.0    1\n","2016.0     1\n","Name: FIPS, Length: 3153, dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"vIoBLDuOIi8o"},"source":["A = pol2020.groupby(['FIPS','party'])['candidatevotes'].sum()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZXAAYtasLS-o"},"source":["a=pd.DataFrame(A)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6atdWauMMbuE"},"source":["a.reset_index(inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VrWhrYDmMZg4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636839486,"user_tz":300,"elapsed":69,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"3b12bc06-8014-4f3c-9d1f-660513d23068"},"source":["a"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>party</th>\n","      <th>candidatevotes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001.0</td>\n","      <td>DEMOCRAT</td>\n","      <td>7503.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001.0</td>\n","      <td>OTHER</td>\n","      <td>429.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001.0</td>\n","      <td>REPUBLICAN</td>\n","      <td>19838.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1003.0</td>\n","      <td>DEMOCRAT</td>\n","      <td>24578.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1003.0</td>\n","      <td>OTHER</td>\n","      <td>1557.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13642</th>\n","      <td>56043.0</td>\n","      <td>REPUBLICAN</td>\n","      <td>3245.0</td>\n","    </tr>\n","    <tr>\n","      <th>13643</th>\n","      <td>56045.0</td>\n","      <td>DEMOCRAT</td>\n","      <td>360.0</td>\n","    </tr>\n","    <tr>\n","      <th>13644</th>\n","      <td>56045.0</td>\n","      <td>LIBERTARIAN</td>\n","      <td>46.0</td>\n","    </tr>\n","    <tr>\n","      <th>13645</th>\n","      <td>56045.0</td>\n","      <td>OTHER</td>\n","      <td>47.0</td>\n","    </tr>\n","    <tr>\n","      <th>13646</th>\n","      <td>56045.0</td>\n","      <td>REPUBLICAN</td>\n","      <td>3107.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>13647 rows × 3 columns</p>\n","</div>"],"text/plain":["          FIPS        party  candidatevotes\n","0       1001.0     DEMOCRAT          7503.0\n","1       1001.0        OTHER           429.0\n","2       1001.0   REPUBLICAN         19838.0\n","3       1003.0     DEMOCRAT         24578.0\n","4       1003.0        OTHER          1557.0\n","...        ...          ...             ...\n","13642  56043.0   REPUBLICAN          3245.0\n","13643  56045.0     DEMOCRAT           360.0\n","13644  56045.0  LIBERTARIAN            46.0\n","13645  56045.0        OTHER            47.0\n","13646  56045.0   REPUBLICAN          3107.0\n","\n","[13647 rows x 3 columns]"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"Q1dtVsdkNS4S"},"source":["pparty['REPUBLICAN'] = a[a['party']=='REPUBLICAN']['candidatevotes'].values\n","pparty['DEMOCRAT'] = a[a['party']=='DEMOCRAT']['candidatevotes'].values"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AwA_GuzuNhkh"},"source":["pparty['FIPS'] = pd.Series(a['FIPS'].unique())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-jfF6aj2NoJ9"},"source":["OTHER = pol2020[pol2020['party']=='OTHER'][['FIPS','candidatevotes']]\n","LIBERTARIAN = pol2020[pol2020['party']=='LIBERTARIAN'][['FIPS','candidatevotes']]\n","GREEN = pol2020[pol2020['party']=='GREEN'][['FIPS','candidatevotes']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JQJ55JJuPK7T"},"source":["pparty = pparty.merge(OTHER, on ='FIPS', how = 'left')\n","pparty = pparty.merge(GREEN, on ='FIPS', how = 'left', suffixes=('other','green'))\n","pparty = pparty.merge(LIBERTARIAN, on ='FIPS', how = 'left', suffixes=('','lib'))\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B0YGhcfoOoV4"},"source":["pparty.rename({'candidatevotesother':'OTHER','candidatevotesgreen':'GREEN','candidatevotes':'LIBERTARIAN'}, inplace=True, axis = 1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lISUJorAeHDG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636839980,"user_tz":300,"elapsed":79,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"bebc3b16-1538-4501-8207-5cca44925179"},"source":["pparty"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>FIPS</th>\n","      <th>OTHER</th>\n","      <th>GREEN</th>\n","      <th>LIBERTARIAN</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19838.0</td>\n","      <td>7503.0</td>\n","      <td>1001.0</td>\n","      <td>429.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>83544.0</td>\n","      <td>24578.0</td>\n","      <td>1003.0</td>\n","      <td>1557.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5622.0</td>\n","      <td>4816.0</td>\n","      <td>1005.0</td>\n","      <td>80.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7525.0</td>\n","      <td>1986.0</td>\n","      <td>1007.0</td>\n","      <td>84.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24711.0</td>\n","      <td>2640.0</td>\n","      <td>1009.0</td>\n","      <td>237.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>32064</th>\n","      <td>12229.0</td>\n","      <td>3823.0</td>\n","      <td>56037.0</td>\n","      <td>296.0</td>\n","      <td>NaN</td>\n","      <td>350.0</td>\n","    </tr>\n","    <tr>\n","      <th>32065</th>\n","      <td>4341.0</td>\n","      <td>9848.0</td>\n","      <td>56039.0</td>\n","      <td>343.0</td>\n","      <td>NaN</td>\n","      <td>255.0</td>\n","    </tr>\n","    <tr>\n","      <th>32066</th>\n","      <td>7496.0</td>\n","      <td>1591.0</td>\n","      <td>56041.0</td>\n","      <td>200.0</td>\n","      <td>NaN</td>\n","      <td>172.0</td>\n","    </tr>\n","    <tr>\n","      <th>32067</th>\n","      <td>3245.0</td>\n","      <td>651.0</td>\n","      <td>56043.0</td>\n","      <td>71.0</td>\n","      <td>NaN</td>\n","      <td>65.0</td>\n","    </tr>\n","    <tr>\n","      <th>32068</th>\n","      <td>3107.0</td>\n","      <td>360.0</td>\n","      <td>56045.0</td>\n","      <td>47.0</td>\n","      <td>NaN</td>\n","      <td>46.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>32069 rows × 6 columns</p>\n","</div>"],"text/plain":["       REPUBLICAN  DEMOCRAT     FIPS   OTHER  GREEN  LIBERTARIAN\n","0         19838.0    7503.0   1001.0   429.0    NaN          NaN\n","1         83544.0   24578.0   1003.0  1557.0    NaN          NaN\n","2          5622.0    4816.0   1005.0    80.0    NaN          NaN\n","3          7525.0    1986.0   1007.0    84.0    NaN          NaN\n","4         24711.0    2640.0   1009.0   237.0    NaN          NaN\n","...           ...       ...      ...     ...    ...          ...\n","32064     12229.0    3823.0  56037.0   296.0    NaN        350.0\n","32065      4341.0    9848.0  56039.0   343.0    NaN        255.0\n","32066      7496.0    1591.0  56041.0   200.0    NaN        172.0\n","32067      3245.0     651.0  56043.0    71.0    NaN         65.0\n","32068      3107.0     360.0  56045.0    47.0    NaN         46.0\n","\n","[32069 rows x 6 columns]"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"9U4kz4YvUXWJ"},"source":["pparty =pparty.groupby('FIPS')[['REPUBLICAN','DEMOCRAT', 'OTHER', \"LIBERTARIAN\", 'GREEN']].sum()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XJ5oQIjYVIMC"},"source":["pparty = pd.DataFrame(pparty)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NQW0MOdFVVZn"},"source":["pparty.reset_index(inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sYsbZ8ZNVaz0"},"source":["pparty['Total']= pparty['DEMOCRAT']+pparty['REPUBLICAN']+pparty['OTHER']+pparty['LIBERTARIAN']+pparty['GREEN']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"H2J7Uz78Vxkp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636840003,"user_tz":300,"elapsed":84,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"01c82737-111e-4243-9b5e-60affebaddce"},"source":["pparty"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1001.0</td>\n","      <td>19838.0</td>\n","      <td>7503.0</td>\n","      <td>429.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>27770.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1003.0</td>\n","      <td>83544.0</td>\n","      <td>24578.0</td>\n","      <td>1557.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>109679.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1005.0</td>\n","      <td>5622.0</td>\n","      <td>4816.0</td>\n","      <td>80.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>10518.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1007.0</td>\n","      <td>7525.0</td>\n","      <td>1986.0</td>\n","      <td>84.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>9595.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1009.0</td>\n","      <td>24711.0</td>\n","      <td>2640.0</td>\n","      <td>237.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>27588.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3148</th>\n","      <td>56037.0</td>\n","      <td>12229.0</td>\n","      <td>3823.0</td>\n","      <td>296.0</td>\n","      <td>350.0</td>\n","      <td>0.0</td>\n","      <td>16698.0</td>\n","    </tr>\n","    <tr>\n","      <th>3149</th>\n","      <td>56039.0</td>\n","      <td>4341.0</td>\n","      <td>9848.0</td>\n","      <td>343.0</td>\n","      <td>255.0</td>\n","      <td>0.0</td>\n","      <td>14787.0</td>\n","    </tr>\n","    <tr>\n","      <th>3150</th>\n","      <td>56041.0</td>\n","      <td>7496.0</td>\n","      <td>1591.0</td>\n","      <td>200.0</td>\n","      <td>172.0</td>\n","      <td>0.0</td>\n","      <td>9459.0</td>\n","    </tr>\n","    <tr>\n","      <th>3151</th>\n","      <td>56043.0</td>\n","      <td>3245.0</td>\n","      <td>651.0</td>\n","      <td>71.0</td>\n","      <td>65.0</td>\n","      <td>0.0</td>\n","      <td>4032.0</td>\n","    </tr>\n","    <tr>\n","      <th>3152</th>\n","      <td>56045.0</td>\n","      <td>3107.0</td>\n","      <td>360.0</td>\n","      <td>47.0</td>\n","      <td>46.0</td>\n","      <td>0.0</td>\n","      <td>3560.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3153 rows × 7 columns</p>\n","</div>"],"text/plain":["         FIPS  REPUBLICAN  DEMOCRAT   OTHER  LIBERTARIAN  GREEN     Total\n","0      1001.0     19838.0    7503.0   429.0          0.0    0.0   27770.0\n","1      1003.0     83544.0   24578.0  1557.0          0.0    0.0  109679.0\n","2      1005.0      5622.0    4816.0    80.0          0.0    0.0   10518.0\n","3      1007.0      7525.0    1986.0    84.0          0.0    0.0    9595.0\n","4      1009.0     24711.0    2640.0   237.0          0.0    0.0   27588.0\n","...       ...         ...       ...     ...          ...    ...       ...\n","3148  56037.0     12229.0    3823.0   296.0        350.0    0.0   16698.0\n","3149  56039.0      4341.0    9848.0   343.0        255.0    0.0   14787.0\n","3150  56041.0      7496.0    1591.0   200.0        172.0    0.0    9459.0\n","3151  56043.0      3245.0     651.0    71.0         65.0    0.0    4032.0\n","3152  56045.0      3107.0     360.0    47.0         46.0    0.0    3560.0\n","\n","[3153 rows x 7 columns]"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"SNdzXCUkYPt5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636840009,"user_tz":300,"elapsed":82,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"5f9bf596-74f4-461f-b107-905adf6ea7f5"},"source":["pparty.isna().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["FIPS           0\n","REPUBLICAN     0\n","DEMOCRAT       0\n","OTHER          0\n","LIBERTARIAN    0\n","GREEN          0\n","Total          0\n","dtype: int64"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","metadata":{"id":"I4Me-iz8ZfKq"},"source":["##MAIN DATA"]},{"cell_type":"code","metadata":{"id":"JVWgThlha_9K"},"source":["main = pd.DataFrame()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GGXH_KqnYdFM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636840021,"user_tz":300,"elapsed":86,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"cb36f040-f217-4424-dce0-6616c6c1a539"},"source":["dfmain['FIPS'] = dfmain['FIPS'].apply(lambda x: int(x))\n","main = dfmain.merge(popden, on = 'FIPS', how = 'left')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","metadata":{"id":"3agTJB4aYoD5"},"source":["main = main.merge(unemp, on = 'FIPS', how = 'left')\n","main['Unemp_rate']=main['Unemp_rate'].fillna(0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3G7uQVUEY8Mo"},"source":["main = main.merge(pparty, on = 'FIPS', how = 'left')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"br4PKzXTY8Pc"},"source":["main = main.merge(ed, on = 'FIPS', how = 'left')\n","main.drop('B', axis=1, inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PRIef3ILabBz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636843578,"user_tz":300,"elapsed":3311,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"1bc2d978-0f4d-4905-d1ca-c8ea80bd6845"},"source":["vac.drop(vac.loc[vac['FIPS']=='UNK'].index, inplace=True)\n","vac['FIPS']=vac['FIPS'].apply(lambda x: int(x))\n","vac['Administered_Dose1_Pop_Pct']=vac['Administered_Dose1_Pop_Pct'].apply(lambda x: float(x))\n","vac['Series_Complete_Pop_Pct']=vac['Series_Complete_Pop_Pct'].apply(lambda x: float(x))\n","vaclatest = vac[vac['Date']==vac['Date'].max()]"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4174: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n"]}]},{"cell_type":"code","metadata":{"id":"cnRkfBAlY8Rv"},"source":["main = main.merge(vaclatest, on ='FIPS', how = 'left')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"D7CKoML4i9BN"},"source":["from sklearn.preprocessing import LabelEncoder\n","encoder = LabelEncoder()\n","main['Metro_status']=main['Metro_status'].fillna('Non-metro')\n","main['Metro_status'] = encoder.fit_transform(main['Metro_status'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"K_H91diTYoKT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636843940,"user_tz":300,"elapsed":21,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"11675872-7f1a-42bc-d825-4345a0b9242a"},"source":["main"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>14963.0</td>\n","      <td>5859.0</td>\n","      <td>169.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1121</td>\n","      <td>Talladega County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.235</td>\n","      <td>0.1368</td>\n","      <td>0.87</td>\n","      <td>0.0229</td>\n","      <td>0.0043</td>\n","      <td>0.0061</td>\n","      <td>0.3237</td>\n","      <td>0.0003</td>\n","      <td>0.6263</td>\n","      <td>Talladega County</td>\n","      <td>Alabama</td>\n","      <td>42.219157</td>\n","      <td>Talladega County, AL</td>\n","      <td>7.0</td>\n","      <td>22235.0</td>\n","      <td>13138.0</td>\n","      <td>290.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>35663.0</td>\n","      <td>AL</td>\n","      <td>Talladega County</td>\n","      <td>19.670317</td>\n","      <td>33.720287</td>\n","      <td>31.648600</td>\n","      <td>14.960798</td>\n","      <td>2021-12-03</td>\n","      <td>Talladega County</td>\n","      <td>AL</td>\n","      <td>34.0</td>\n","      <td>41.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1131</td>\n","      <td>Wilcox County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.2357</td>\n","      <td>0.1337</td>\n","      <td>0.93</td>\n","      <td>0.0053</td>\n","      <td>0.0009</td>\n","      <td>0.0003</td>\n","      <td>0.6938</td>\n","      <td>0</td>\n","      <td>0.2684</td>\n","      <td>Wilcox County</td>\n","      <td>Alabama</td>\n","      <td>4.697370</td>\n","      <td>Wilcox County, AL</td>\n","      <td>14.7</td>\n","      <td>1833.0</td>\n","      <td>4048.0</td>\n","      <td>22.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5903.0</td>\n","      <td>AL</td>\n","      <td>Wilcox County</td>\n","      <td>23.545122</td>\n","      <td>39.471466</td>\n","      <td>24.486927</td>\n","      <td>12.496486</td>\n","      <td>2021-12-03</td>\n","      <td>Wilcox County</td>\n","      <td>AL</td>\n","      <td>48.8</td>\n","      <td>62.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1129</td>\n","      <td>Washington County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.2357</td>\n","      <td>0.1337</td>\n","      <td>0.73</td>\n","      <td>0.0146</td>\n","      <td>0.0731</td>\n","      <td>0.0025</td>\n","      <td>0.2354</td>\n","      <td>0</td>\n","      <td>0.6495</td>\n","      <td>Washington County</td>\n","      <td>Alabama</td>\n","      <td>5.948772</td>\n","      <td>Washington County, AL</td>\n","      <td>8.0</td>\n","      <td>6564.0</td>\n","      <td>2258.0</td>\n","      <td>54.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8876.0</td>\n","      <td>AL</td>\n","      <td>Washington County</td>\n","      <td>17.371761</td>\n","      <td>43.063633</td>\n","      <td>26.899347</td>\n","      <td>12.665257</td>\n","      <td>2021-12-03</td>\n","      <td>Washington County</td>\n","      <td>AL</td>\n","      <td>43.1</td>\n","      <td>52.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1133</td>\n","      <td>Winston County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.2313</td>\n","      <td>0.1379</td>\n","      <td>0.7</td>\n","      <td>0.0315</td>\n","      <td>0.0034</td>\n","      <td>0.0016</td>\n","      <td>0.0073</td>\n","      <td>0.0005</td>\n","      <td>0.937</td>\n","      <td>Winston County</td>\n","      <td>Alabama</td>\n","      <td>15.038338</td>\n","      <td>Winston County, AL</td>\n","      <td>4.7</td>\n","      <td>10195.0</td>\n","      <td>974.0</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>11284.0</td>\n","      <td>AL</td>\n","      <td>Winston County</td>\n","      <td>21.187923</td>\n","      <td>38.214035</td>\n","      <td>27.768711</td>\n","      <td>12.829330</td>\n","      <td>2021-12-03</td>\n","      <td>Winston County</td>\n","      <td>AL</td>\n","      <td>20.5</td>\n","      <td>24.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3137</th>\n","      <td>55079</td>\n","      <td>Milwaukee County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2144</td>\n","      <td>0.088</td>\n","      <td>0.81</td>\n","      <td>0.15</td>\n","      <td>0.0047</td>\n","      <td>0.0428</td>\n","      <td>0.2606</td>\n","      <td>0.0002</td>\n","      <td>0.5124</td>\n","      <td>Milwaukee County</td>\n","      <td>Wisconsin</td>\n","      <td>1525.658962</td>\n","      <td>Milwaukee County, WI</td>\n","      <td>8.2</td>\n","      <td>134357.0</td>\n","      <td>317270.0</td>\n","      <td>2790.0</td>\n","      <td>4340.0</td>\n","      <td>214.0</td>\n","      <td>458971.0</td>\n","      <td>WI</td>\n","      <td>Milwaukee County</td>\n","      <td>11.713523</td>\n","      <td>28.367804</td>\n","      <td>28.952116</td>\n","      <td>30.966558</td>\n","      <td>2021-12-03</td>\n","      <td>Milwaukee County</td>\n","      <td>WI</td>\n","      <td>57.9</td>\n","      <td>65.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3138</th>\n","      <td>55121</td>\n","      <td>Trempealeau County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2126</td>\n","      <td>0.0959</td>\n","      <td>0.28</td>\n","      <td>0.084</td>\n","      <td>0.0034</td>\n","      <td>0.0043</td>\n","      <td>0.0051</td>\n","      <td>0</td>\n","      <td>0.8953</td>\n","      <td>Trempealeau County</td>\n","      <td>Wisconsin</td>\n","      <td>15.506148</td>\n","      <td>Trempealeau County, WI</td>\n","      <td>7.0</td>\n","      <td>8833.0</td>\n","      <td>6285.0</td>\n","      <td>82.0</td>\n","      <td>177.0</td>\n","      <td>3.0</td>\n","      <td>15380.0</td>\n","      <td>WI</td>\n","      <td>Trempealeau County</td>\n","      <td>9.327148</td>\n","      <td>39.044342</td>\n","      <td>32.350742</td>\n","      <td>19.277769</td>\n","      <td>2021-12-03</td>\n","      <td>Trempealeau County</td>\n","      <td>WI</td>\n","      <td>60.8</td>\n","      <td>65.7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3139</th>\n","      <td>56001</td>\n","      <td>Albany County, Wyoming</td>\n","      <td>WYOMING</td>\n","      <td>0.2673</td>\n","      <td>0.1405</td>\n","      <td>0.25</td>\n","      <td>0.0953</td>\n","      <td>0.0091</td>\n","      <td>0.0327</td>\n","      <td>0.015</td>\n","      <td>0.0003</td>\n","      <td>0.8248</td>\n","      <td>Albany County</td>\n","      <td>Wyoming</td>\n","      <td>3.441773</td>\n","      <td>Albany County, WY</td>\n","      <td>4.0</td>\n","      <td>8579.0</td>\n","      <td>9092.0</td>\n","      <td>478.0</td>\n","      <td>595.0</td>\n","      <td>0.0</td>\n","      <td>18744.0</td>\n","      <td>WY</td>\n","      <td>Albany County</td>\n","      <td>4.050845</td>\n","      <td>14.685477</td>\n","      <td>29.496672</td>\n","      <td>51.767006</td>\n","      <td>2021-12-03</td>\n","      <td>Albany County</td>\n","      <td>WY</td>\n","      <td>49.3</td>\n","      <td>57.4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3140</th>\n","      <td>55067</td>\n","      <td>Langlade County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2007</td>\n","      <td>0.0906</td>\n","      <td>0.35</td>\n","      <td>0.0197</td>\n","      <td>0.0069</td>\n","      <td>0.0022</td>\n","      <td>0.0125</td>\n","      <td>0.0002</td>\n","      <td>0.9383</td>\n","      <td>Langlade County</td>\n","      <td>Wisconsin</td>\n","      <td>8.498077</td>\n","      <td>Langlade County, WI</td>\n","      <td>6.5</td>\n","      <td>7330.0</td>\n","      <td>3704.0</td>\n","      <td>34.0</td>\n","      <td>94.0</td>\n","      <td>3.0</td>\n","      <td>11165.0</td>\n","      <td>WI</td>\n","      <td>Langlade County</td>\n","      <td>9.747293</td>\n","      <td>42.337368</td>\n","      <td>31.259291</td>\n","      <td>16.656048</td>\n","      <td>2021-12-03</td>\n","      <td>Langlade County</td>\n","      <td>WI</td>\n","      <td>50.6</td>\n","      <td>53.7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3141</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>5394.0</td>\n","      <td>3032.0</td>\n","      <td>21.0</td>\n","      <td>98.0</td>\n","      <td>1.0</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2021-12-03</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>58.0</td>\n","      <td>61.7</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3142 rows × 35 columns</p>\n","</div>"],"text/plain":["       FIPS  ... Metro_status\n","0      1123  ...            1\n","1      1121  ...            1\n","2      1131  ...            1\n","3      1129  ...            1\n","4      1133  ...            1\n","...     ...  ...          ...\n","3137  55079  ...            0\n","3138  55121  ...            1\n","3139  56001  ...            1\n","3140  55067  ...            1\n","3141  55099  ...            1\n","\n","[3142 rows x 35 columns]"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","metadata":{"id":"FJ5Q0ZOXTI8w"},"source":["per =  pd.DataFrame()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Aq2Px63gTTJj"},"source":["main['REPUBLICAN']=per['R'] = main['REPUBLICAN']/main['Total']\n","main['DEMOCRAT'] = per['D'] = main['DEMOCRAT']/main['Total']\n","main['GREEN'] = per['G'] = main['GREEN']/main['Total']\n","main['OTHER'] = per['O'] = main['OTHER']/main['Total']\n","main['LIBERTARIAN'] = per['L'] = main['LIBERTARIAN']/main['Total']\n","per['d1'] = main['Series_Complete_Pop_Pct']\n","per['all'] = main['Administered_Dose1_Pop_Pct']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lzXhmGjTQu4H"},"source":["main.to_csv('covid.csv',index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"u742rfLwbzE5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636844818,"user_tz":300,"elapsed":27,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"86cb3cd7-c764-4873-cd0a-64a7d47ad526"},"source":["corr = main.corr()\n","corr"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>POPDEN</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>FIPS</th>\n","      <td>1.000000</td>\n","      <td>0.023760</td>\n","      <td>0.024134</td>\n","      <td>0.055873</td>\n","      <td>-0.057490</td>\n","      <td>-0.018140</td>\n","      <td>0.046704</td>\n","      <td>-0.030448</td>\n","      <td>0.028903</td>\n","      <td>-0.003280</td>\n","      <td>-0.000763</td>\n","      <td>-0.056284</td>\n","      <td>0.033355</td>\n","      <td>0.047326</td>\n","      <td>0.083489</td>\n","      <td>-0.001039</td>\n","    </tr>\n","    <tr>\n","      <th>POPDEN</th>\n","      <td>0.023760</td>\n","      <td>1.000000</td>\n","      <td>0.123176</td>\n","      <td>-0.257618</td>\n","      <td>0.259886</td>\n","      <td>0.042078</td>\n","      <td>-0.053225</td>\n","      <td>0.077719</td>\n","      <td>0.054145</td>\n","      <td>-0.014865</td>\n","      <td>-0.188113</td>\n","      <td>-0.163282</td>\n","      <td>0.240708</td>\n","      <td>0.151771</td>\n","      <td>0.154465</td>\n","      <td>-0.164805</td>\n","    </tr>\n","    <tr>\n","      <th>Unemp_rate</th>\n","      <td>0.024134</td>\n","      <td>0.123176</td>\n","      <td>1.000000</td>\n","      <td>-0.403230</td>\n","      <td>0.407672</td>\n","      <td>0.086521</td>\n","      <td>-0.159411</td>\n","      <td>0.287900</td>\n","      <td>0.000567</td>\n","      <td>0.234680</td>\n","      <td>0.068069</td>\n","      <td>-0.209834</td>\n","      <td>-0.090678</td>\n","      <td>0.193840</td>\n","      <td>0.284041</td>\n","      <td>-0.109063</td>\n","    </tr>\n","    <tr>\n","      <th>REPUBLICAN</th>\n","      <td>0.055873</td>\n","      <td>-0.257618</td>\n","      <td>-0.403230</td>\n","      <td>1.000000</td>\n","      <td>-0.998359</td>\n","      <td>-0.183989</td>\n","      <td>-0.000692</td>\n","      <td>-0.341818</td>\n","      <td>-0.161073</td>\n","      <td>0.136629</td>\n","      <td>0.485730</td>\n","      <td>0.152720</td>\n","      <td>-0.539487</td>\n","      <td>-0.547503</td>\n","      <td>-0.549718</td>\n","      <td>0.344231</td>\n","    </tr>\n","    <tr>\n","      <th>DEMOCRAT</th>\n","      <td>-0.057490</td>\n","      <td>0.259886</td>\n","      <td>0.407672</td>\n","      <td>-0.998359</td>\n","      <td>1.000000</td>\n","      <td>0.152666</td>\n","      <td>-0.044085</td>\n","      <td>0.320857</td>\n","      <td>0.171879</td>\n","      <td>-0.117262</td>\n","      <td>-0.477261</td>\n","      <td>-0.168138</td>\n","      <td>0.528798</td>\n","      <td>0.536384</td>\n","      <td>0.543087</td>\n","      <td>-0.344872</td>\n","    </tr>\n","    <tr>\n","      <th>OTHER</th>\n","      <td>-0.018140</td>\n","      <td>0.042078</td>\n","      <td>0.086521</td>\n","      <td>-0.183989</td>\n","      <td>0.152666</td>\n","      <td>1.000000</td>\n","      <td>-0.057688</td>\n","      <td>0.159399</td>\n","      <td>-0.067816</td>\n","      <td>-0.068534</td>\n","      <td>-0.078931</td>\n","      <td>0.014598</td>\n","      <td>0.096557</td>\n","      <td>0.154689</td>\n","      <td>0.144665</td>\n","      <td>-0.037728</td>\n","    </tr>\n","    <tr>\n","      <th>LIBERTARIAN</th>\n","      <td>0.046704</td>\n","      <td>-0.053225</td>\n","      <td>-0.159411</td>\n","      <td>-0.000692</td>\n","      <td>-0.044085</td>\n","      <td>-0.057688</td>\n","      <td>1.000000</td>\n","      <td>0.165779</td>\n","      <td>-0.149271</td>\n","      <td>-0.386883</td>\n","      <td>-0.161460</td>\n","      <td>0.294488</td>\n","      <td>0.215046</td>\n","      <td>0.161723</td>\n","      <td>0.070256</td>\n","      <td>0.001784</td>\n","    </tr>\n","    <tr>\n","      <th>GREEN</th>\n","      <td>-0.030448</td>\n","      <td>0.077719</td>\n","      <td>0.287900</td>\n","      <td>-0.341818</td>\n","      <td>0.320857</td>\n","      <td>0.159399</td>\n","      <td>0.165779</td>\n","      <td>1.000000</td>\n","      <td>-0.043002</td>\n","      <td>-0.075094</td>\n","      <td>-0.237720</td>\n","      <td>0.038861</td>\n","      <td>0.207589</td>\n","      <td>0.292292</td>\n","      <td>0.290125</td>\n","      <td>-0.094695</td>\n","    </tr>\n","    <tr>\n","      <th>Total</th>\n","      <td>0.028903</td>\n","      <td>0.054145</td>\n","      <td>0.000567</td>\n","      <td>-0.161073</td>\n","      <td>0.171879</td>\n","      <td>-0.067816</td>\n","      <td>-0.149271</td>\n","      <td>-0.043002</td>\n","      <td>1.000000</td>\n","      <td>-0.045322</td>\n","      <td>-0.169449</td>\n","      <td>-0.039507</td>\n","      <td>0.179174</td>\n","      <td>0.119184</td>\n","      <td>0.133576</td>\n","      <td>-0.163500</td>\n","    </tr>\n","    <tr>\n","      <th>LHSD</th>\n","      <td>-0.003280</td>\n","      <td>-0.014865</td>\n","      <td>0.234680</td>\n","      <td>0.136629</td>\n","      <td>-0.117262</td>\n","      <td>-0.068534</td>\n","      <td>-0.386883</td>\n","      <td>-0.075094</td>\n","      <td>-0.045322</td>\n","      <td>1.000000</td>\n","      <td>0.255891</td>\n","      <td>-0.462048</td>\n","      <td>-0.595757</td>\n","      <td>-0.284300</td>\n","      <td>-0.175236</td>\n","      <td>0.195900</td>\n","    </tr>\n","    <tr>\n","      <th>HSD</th>\n","      <td>-0.000763</td>\n","      <td>-0.188113</td>\n","      <td>0.068069</td>\n","      <td>0.485730</td>\n","      <td>-0.477261</td>\n","      <td>-0.078931</td>\n","      <td>-0.161460</td>\n","      <td>-0.237720</td>\n","      <td>-0.169449</td>\n","      <td>0.255891</td>\n","      <td>1.000000</td>\n","      <td>-0.265742</td>\n","      <td>-0.778183</td>\n","      <td>-0.401039</td>\n","      <td>-0.349670</td>\n","      <td>0.326893</td>\n","    </tr>\n","    <tr>\n","      <th>CAD</th>\n","      <td>-0.056284</td>\n","      <td>-0.163282</td>\n","      <td>-0.209834</td>\n","      <td>0.152720</td>\n","      <td>-0.168138</td>\n","      <td>0.014598</td>\n","      <td>0.294488</td>\n","      <td>0.038861</td>\n","      <td>-0.039507</td>\n","      <td>-0.462048</td>\n","      <td>-0.265742</td>\n","      <td>1.000000</td>\n","      <td>-0.041371</td>\n","      <td>0.011991</td>\n","      <td>-0.102296</td>\n","      <td>0.058679</td>\n","    </tr>\n","    <tr>\n","      <th>BDH</th>\n","      <td>0.033355</td>\n","      <td>0.240708</td>\n","      <td>-0.090678</td>\n","      <td>-0.539487</td>\n","      <td>0.528798</td>\n","      <td>0.096557</td>\n","      <td>0.215046</td>\n","      <td>0.207589</td>\n","      <td>0.179174</td>\n","      <td>-0.595757</td>\n","      <td>-0.778183</td>\n","      <td>-0.041371</td>\n","      <td>1.000000</td>\n","      <td>0.482362</td>\n","      <td>0.434439</td>\n","      <td>-0.407003</td>\n","    </tr>\n","    <tr>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <td>0.047326</td>\n","      <td>0.151771</td>\n","      <td>0.193840</td>\n","      <td>-0.547503</td>\n","      <td>0.536384</td>\n","      <td>0.154689</td>\n","      <td>0.161723</td>\n","      <td>0.292292</td>\n","      <td>0.119184</td>\n","      <td>-0.284300</td>\n","      <td>-0.401039</td>\n","      <td>0.011991</td>\n","      <td>0.482362</td>\n","      <td>1.000000</td>\n","      <td>0.906568</td>\n","      <td>-0.222794</td>\n","    </tr>\n","    <tr>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <td>0.083489</td>\n","      <td>0.154465</td>\n","      <td>0.284041</td>\n","      <td>-0.549718</td>\n","      <td>0.543087</td>\n","      <td>0.144665</td>\n","      <td>0.070256</td>\n","      <td>0.290125</td>\n","      <td>0.133576</td>\n","      <td>-0.175236</td>\n","      <td>-0.349670</td>\n","      <td>-0.102296</td>\n","      <td>0.434439</td>\n","      <td>0.906568</td>\n","      <td>1.000000</td>\n","      <td>-0.248114</td>\n","    </tr>\n","    <tr>\n","      <th>Metro_status</th>\n","      <td>-0.001039</td>\n","      <td>-0.164805</td>\n","      <td>-0.109063</td>\n","      <td>0.344231</td>\n","      <td>-0.344872</td>\n","      <td>-0.037728</td>\n","      <td>0.001784</td>\n","      <td>-0.094695</td>\n","      <td>-0.163500</td>\n","      <td>0.195900</td>\n","      <td>0.326893</td>\n","      <td>0.058679</td>\n","      <td>-0.407003</td>\n","      <td>-0.222794</td>\n","      <td>-0.248114</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                FIPS  ...  Metro_status\n","FIPS                        1.000000  ...     -0.001039\n","POPDEN                      0.023760  ...     -0.164805\n","Unemp_rate                  0.024134  ...     -0.109063\n","REPUBLICAN                  0.055873  ...      0.344231\n","DEMOCRAT                   -0.057490  ...     -0.344872\n","OTHER                      -0.018140  ...     -0.037728\n","LIBERTARIAN                 0.046704  ...      0.001784\n","GREEN                      -0.030448  ...     -0.094695\n","Total                       0.028903  ...     -0.163500\n","LHSD                       -0.003280  ...      0.195900\n","HSD                        -0.000763  ...      0.326893\n","CAD                        -0.056284  ...      0.058679\n","BDH                         0.033355  ...     -0.407003\n","Series_Complete_Pop_Pct     0.047326  ...     -0.222794\n","Administered_Dose1_Pop_Pct  0.083489  ...     -0.248114\n","Metro_status               -0.001039  ...      1.000000\n","\n","[16 rows x 16 columns]"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","metadata":{"id":"97socY-ekf_U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636844820,"user_tz":300,"elapsed":24,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"892a8c77-b2e0-43d5-e017-d38ec6c918c4"},"source":["main[main['FIPS']==36061]\n","#checking metro status"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2049</th>\n","      <td>36061</td>\n","      <td>New York County, New York</td>\n","      <td>NEW YORK</td>\n","      <td>0.0894</td>\n","      <td>0.0313</td>\n","      <td>0.55</td>\n","      <td>0.2583</td>\n","      <td>0.0012</td>\n","      <td>0.1205</td>\n","      <td>0.1247</td>\n","      <td>0.0003</td>\n","      <td>0.4691</td>\n","      <td>New York County</td>\n","      <td>New York</td>\n","      <td>27819.804801</td>\n","      <td>New York County, NY</td>\n","      <td>9.5</td>\n","      <td>0.121449</td>\n","      <td>0.85976</td>\n","      <td>0.010204</td>\n","      <td>0.004746</td>\n","      <td>0.003841</td>\n","      <td>701405.0</td>\n","      <td>NY</td>\n","      <td>New York County</td>\n","      <td>12.724144</td>\n","      <td>12.422151</td>\n","      <td>13.538717</td>\n","      <td>61.314987</td>\n","      <td>2021-12-03</td>\n","      <td>New York County</td>\n","      <td>NY</td>\n","      <td>76.1</td>\n","      <td>92.3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       FIPS  ... Metro_status\n","2049  36061  ...            0\n","\n","[1 rows x 35 columns]"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3nZZURAbEEdD","executionInfo":{"status":"ok","timestamp":1638636845174,"user_tz":300,"elapsed":375,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"ab2ec5ae-8033-45be-ecff-d8280600db2f"},"source":["main[main['Series_Complete_Pop_Pct']>=80]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>188</th>\n","      <td>48377</td>\n","      <td>Presidio County, Texas</td>\n","      <td>TEXAS</td>\n","      <td>0.1765</td>\n","      <td>0.0789</td>\n","      <td>1</td>\n","      <td>0.8374</td>\n","      <td>0.0195</td>\n","      <td>0.0135</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.1296</td>\n","      <td>Presidio County</td>\n","      <td>Texas</td>\n","      <td>0.713366</td>\n","      <td>Presidio County, TX</td>\n","      <td>14.7</td>\n","      <td>0.325214</td>\n","      <td>0.659901</td>\n","      <td>0.000000</td>\n","      <td>0.009472</td>\n","      <td>0.005413</td>\n","      <td>2217.0</td>\n","      <td>TX</td>\n","      <td>Presidio County</td>\n","      <td>46.588074</td>\n","      <td>15.892088</td>\n","      <td>16.345499</td>\n","      <td>21.174337</td>\n","      <td>2021-12-03</td>\n","      <td>Presidio County</td>\n","      <td>TX</td>\n","      <td>82.5</td>\n","      <td>99.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>304</th>\n","      <td>4001</td>\n","      <td>Apache County, Arizona</td>\n","      <td>ARIZONA</td>\n","      <td>0.3197</td>\n","      <td>0.1586</td>\n","      <td>0.99</td>\n","      <td>0.0634</td>\n","      <td>0.7311</td>\n","      <td>0.0034</td>\n","      <td>0.0052</td>\n","      <td>0.0002</td>\n","      <td>0.1821</td>\n","      <td>Apache County</td>\n","      <td>Arizona</td>\n","      <td>2.466164</td>\n","      <td>Apache County, AZ</td>\n","      <td>12.8</td>\n","      <td>0.328033</td>\n","      <td>0.667791</td>\n","      <td>0.000000</td>\n","      <td>0.004176</td>\n","      <td>0.000000</td>\n","      <td>941778.0</td>\n","      <td>AZ</td>\n","      <td>Apache County</td>\n","      <td>19.597767</td>\n","      <td>32.238758</td>\n","      <td>35.862865</td>\n","      <td>12.300608</td>\n","      <td>2021-12-03</td>\n","      <td>Apache County</td>\n","      <td>AZ</td>\n","      <td>83.1</td>\n","      <td>99.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>324</th>\n","      <td>2060</td>\n","      <td>Bristol Bay Borough, Alaska</td>\n","      <td>ALASKA</td>\n","      <td>0.2884</td>\n","      <td>0.1704</td>\n","      <td>0.35</td>\n","      <td>0.0366</td>\n","      <td>0.3417</td>\n","      <td>0.0023</td>\n","      <td>0.0057</td>\n","      <td>0.0023</td>\n","      <td>0.5086</td>\n","      <td>Bristol Bay Borough</td>\n","      <td>Alaska</td>\n","      <td>0.712956</td>\n","      <td>Bristol Bay Borough, AK</td>\n","      <td>7.4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>AK</td>\n","      <td>Bristol Bay Borough</td>\n","      <td>5.984252</td>\n","      <td>37.007874</td>\n","      <td>34.488190</td>\n","      <td>22.519686</td>\n","      <td>2021-12-03</td>\n","      <td>Bristol Bay Borough</td>\n","      <td>AK</td>\n","      <td>95.2</td>\n","      <td>99.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>339</th>\n","      <td>4023</td>\n","      <td>Santa Cruz County, Arizona</td>\n","      <td>ARIZONA</td>\n","      <td>0.223</td>\n","      <td>0.1076</td>\n","      <td>0.93</td>\n","      <td>0.8346</td>\n","      <td>0.0022</td>\n","      <td>0.0083</td>\n","      <td>0.0024</td>\n","      <td>0</td>\n","      <td>0.1485</td>\n","      <td>Santa Cruz County</td>\n","      <td>Arizona</td>\n","      <td>14.541081</td>\n","      <td>Santa Cruz County, AZ</td>\n","      <td>11.4</td>\n","      <td>0.319169</td>\n","      <td>0.676984</td>\n","      <td>0.000000</td>\n","      <td>0.003847</td>\n","      <td>0.000000</td>\n","      <td>523980.0</td>\n","      <td>AZ</td>\n","      <td>Santa Cruz County</td>\n","      <td>23.401133</td>\n","      <td>28.660160</td>\n","      <td>27.506655</td>\n","      <td>20.432053</td>\n","      <td>2021-12-03</td>\n","      <td>Santa Cruz County</td>\n","      <td>AZ</td>\n","      <td>94.8</td>\n","      <td>99.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>6041</td>\n","      <td>Marin County, California</td>\n","      <td>CALIFORNIA</td>\n","      <td>0.0725</td>\n","      <td>0.025</td>\n","      <td>0.27</td>\n","      <td>0.1598</td>\n","      <td>0.0017</td>\n","      <td>0.0581</td>\n","      <td>0.0213</td>\n","      <td>0.001</td>\n","      <td>0.7115</td>\n","      <td>Marin County</td>\n","      <td>California</td>\n","      <td>193.100506</td>\n","      <td>Marin County, CA</td>\n","      <td>6.7</td>\n","      <td>0.157941</td>\n","      <td>0.823256</td>\n","      <td>0.004300</td>\n","      <td>0.009857</td>\n","      <td>0.004646</td>\n","      <td>155830.0</td>\n","      <td>CA</td>\n","      <td>Marin County</td>\n","      <td>6.701050</td>\n","      <td>10.513490</td>\n","      <td>23.293751</td>\n","      <td>59.491711</td>\n","      <td>2021-12-03</td>\n","      <td>Marin County</td>\n","      <td>CA</td>\n","      <td>80.0</td>\n","      <td>92.3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>571</th>\n","      <td>13053</td>\n","      <td>Chattahoochee County, Georgia</td>\n","      <td>GEORGIA</td>\n","      <td>0.2319</td>\n","      <td>0.0927</td>\n","      <td>0.64</td>\n","      <td>0.1586</td>\n","      <td>0.0028</td>\n","      <td>0.0289</td>\n","      <td>0.1988</td>\n","      <td>0.0014</td>\n","      <td>0.5758</td>\n","      <td>Chattahoochee County</td>\n","      <td>Georgia</td>\n","      <td>16.713072</td>\n","      <td>Chattahoochee County, GA</td>\n","      <td>6.2</td>\n","      <td>0.565644</td>\n","      <td>0.428732</td>\n","      <td>0.000000</td>\n","      <td>0.005624</td>\n","      <td>0.000000</td>\n","      <td>6223.0</td>\n","      <td>GA</td>\n","      <td>Chattahoochee County</td>\n","      <td>5.720422</td>\n","      <td>28.348301</td>\n","      <td>36.450603</td>\n","      <td>29.480671</td>\n","      <td>2021-12-03</td>\n","      <td>Chattahoochee County</td>\n","      <td>GA</td>\n","      <td>99.9</td>\n","      <td>99.9</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>671</th>\n","      <td>8111</td>\n","      <td>San Juan County, Colorado</td>\n","      <td>COLORADO</td>\n","      <td>0.1142</td>\n","      <td>0.0438</td>\n","      <td>0.13</td>\n","      <td>0.0849</td>\n","      <td>0.0102</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.8879</td>\n","      <td>San Juan County</td>\n","      <td>Colorado</td>\n","      <td>0.542016</td>\n","      <td>San Juan County, CO</td>\n","      <td>6.7</td>\n","      <td>0.359431</td>\n","      <td>0.608541</td>\n","      <td>0.016014</td>\n","      <td>0.012456</td>\n","      <td>0.003559</td>\n","      <td>562.0</td>\n","      <td>CO</td>\n","      <td>San Juan County</td>\n","      <td>6.185567</td>\n","      <td>25.773195</td>\n","      <td>32.371136</td>\n","      <td>35.670105</td>\n","      <td>2021-12-03</td>\n","      <td>San Juan County</td>\n","      <td>CO</td>\n","      <td>88.7</td>\n","      <td>98.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>22125</td>\n","      <td>West Feliciana Parish, Louisiana</td>\n","      <td>LOUISIANA</td>\n","      <td>0.2647</td>\n","      <td>0.1174</td>\n","      <td>0.69</td>\n","      <td>0.0124</td>\n","      <td>0.0019</td>\n","      <td>0.0061</td>\n","      <td>0.4443</td>\n","      <td>0</td>\n","      <td>0.5237</td>\n","      <td>West Feliciana Parish</td>\n","      <td>Louisiana</td>\n","      <td>14.720609</td>\n","      <td>West Feliciana Parish, LA</td>\n","      <td>5.4</td>\n","      <td>0.616305</td>\n","      <td>0.366624</td>\n","      <td>0.006541</td>\n","      <td>0.010530</td>\n","      <td>0.000000</td>\n","      <td>6268.0</td>\n","      <td>LA</td>\n","      <td>West Feliciana Parish</td>\n","      <td>17.912773</td>\n","      <td>31.844929</td>\n","      <td>26.081690</td>\n","      <td>24.160608</td>\n","      <td>2021-12-03</td>\n","      <td>West Feliciana Parish</td>\n","      <td>LA</td>\n","      <td>83.3</td>\n","      <td>91.8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1515</th>\n","      <td>24031</td>\n","      <td>Montgomery County, Maryland</td>\n","      <td>MARYLAND</td>\n","      <td>0.0767</td>\n","      <td>0.0276</td>\n","      <td>0.33</td>\n","      <td>0.1953</td>\n","      <td>0.0014</td>\n","      <td>0.1469</td>\n","      <td>0.1792</td>\n","      <td>0.0004</td>\n","      <td>0.4382</td>\n","      <td>Montgomery County</td>\n","      <td>Maryland</td>\n","      <td>814.474796</td>\n","      <td>Montgomery County, MD</td>\n","      <td>6.3</td>\n","      <td>0.193400</td>\n","      <td>0.801651</td>\n","      <td>0.002145</td>\n","      <td>0.001623</td>\n","      <td>0.001181</td>\n","      <td>65422675.0</td>\n","      <td>MD</td>\n","      <td>Montgomery County</td>\n","      <td>9.012258</td>\n","      <td>13.404374</td>\n","      <td>18.723778</td>\n","      <td>58.859589</td>\n","      <td>2021-12-03</td>\n","      <td>Montgomery County</td>\n","      <td>MD</td>\n","      <td>80.3</td>\n","      <td>93.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>36041</td>\n","      <td>Hamilton County, New York</td>\n","      <td>NEW YORK</td>\n","      <td>0.1613</td>\n","      <td>0.062</td>\n","      <td>0.39</td>\n","      <td>0.0166</td>\n","      <td>0.0011</td>\n","      <td>0.0007</td>\n","      <td>0.008</td>\n","      <td>0.0004</td>\n","      <td>0.9595</td>\n","      <td>Hamilton County</td>\n","      <td>New York</td>\n","      <td>1.028556</td>\n","      <td>Hamilton County, NY</td>\n","      <td>7.9</td>\n","      <td>0.637719</td>\n","      <td>0.337633</td>\n","      <td>0.010891</td>\n","      <td>0.011751</td>\n","      <td>0.002006</td>\n","      <td>3489.0</td>\n","      <td>NY</td>\n","      <td>Hamilton County</td>\n","      <td>22.539949</td>\n","      <td>27.165686</td>\n","      <td>33.445473</td>\n","      <td>16.848892</td>\n","      <td>2021-12-03</td>\n","      <td>Hamilton County</td>\n","      <td>NY</td>\n","      <td>80.0</td>\n","      <td>88.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2940</th>\n","      <td>51740</td>\n","      <td>Portsmouth city, Virginia</td>\n","      <td>VIRGINIA</td>\n","      <td>0.1402</td>\n","      <td>0.0436</td>\n","      <td>0.8</td>\n","      <td>0.0446</td>\n","      <td>0.0037</td>\n","      <td>0.0137</td>\n","      <td>0.5224</td>\n","      <td>0.0028</td>\n","      <td>0.3766</td>\n","      <td>Portsmouth city</td>\n","      <td>Virginia</td>\n","      <td>1105.078045</td>\n","      <td>Portsmouth city, VA</td>\n","      <td>9.6</td>\n","      <td>0.289871</td>\n","      <td>0.703326</td>\n","      <td>0.001326</td>\n","      <td>0.005477</td>\n","      <td>0.000000</td>\n","      <td>396021.0</td>\n","      <td>VA</td>\n","      <td>Portsmouth city</td>\n","      <td>11.748153</td>\n","      <td>30.066027</td>\n","      <td>36.294609</td>\n","      <td>21.891212</td>\n","      <td>2021-12-03</td>\n","      <td>Portsmouth city</td>\n","      <td>VA</td>\n","      <td>85.7</td>\n","      <td>95.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3051</th>\n","      <td>56039</td>\n","      <td>Teton County, Wyoming</td>\n","      <td>WYOMING</td>\n","      <td>0.2671</td>\n","      <td>0.1472</td>\n","      <td>0.11</td>\n","      <td>0.1503</td>\n","      <td>0.0033</td>\n","      <td>0.0125</td>\n","      <td>0.0124</td>\n","      <td>0.0012</td>\n","      <td>0.8134</td>\n","      <td>Teton County</td>\n","      <td>Wyoming</td>\n","      <td>2.227539</td>\n","      <td>Teton County, WY</td>\n","      <td>6.0</td>\n","      <td>0.293569</td>\n","      <td>0.665990</td>\n","      <td>0.023196</td>\n","      <td>0.017245</td>\n","      <td>0.000000</td>\n","      <td>14787.0</td>\n","      <td>WY</td>\n","      <td>Teton County</td>\n","      <td>4.814409</td>\n","      <td>14.876176</td>\n","      <td>23.304277</td>\n","      <td>57.005138</td>\n","      <td>2021-12-03</td>\n","      <td>Teton County</td>\n","      <td>WY</td>\n","      <td>83.7</td>\n","      <td>98.1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       FIPS  ... Metro_status\n","188   48377  ...            1\n","304    4001  ...            1\n","324    2060  ...            1\n","339    4023  ...            1\n","413    6041  ...            0\n","571   13053  ...            0\n","671    8111  ...            1\n","1283  22125  ...            0\n","1515  24031  ...            0\n","1997  36041  ...            1\n","2940  51740  ...            0\n","3051  56039  ...            1\n","\n","[12 rows x 35 columns]"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","metadata":{"id":"KZb6MXVGiWeb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636845176,"user_tz":300,"elapsed":63,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"205b5a68-09c1-41ae-95b5-cf1a2ec32b7c"},"source":["main.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['FIPS', 'county_name', 'State_x', 'HESITANT_UNS', 'HESITANT_S', 'SVI',\n","       'Hispanic', 'AIAN', 'Asian', 'Black', 'NHPI', 'White', 'County_x',\n","       'State_y', 'POPDEN', 'County_y', 'Unemp_rate', 'REPUBLICAN', 'DEMOCRAT',\n","       'OTHER', 'LIBERTARIAN', 'GREEN', 'Total', 'State', 'County', 'LHSD',\n","       'HSD', 'CAD', 'BDH', 'Date', 'Recip_County', 'Recip_State',\n","       'Series_Complete_Pop_Pct', 'Administered_Dose1_Pop_Pct',\n","       'Metro_status'],\n","      dtype='object')"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"zGBKljFDintQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636845179,"user_tz":300,"elapsed":60,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"03d85992-9aef-47ff-ab2c-23a8244eadcc"},"source":["main.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3142, 35)"]},"metadata":{},"execution_count":62}]},{"cell_type":"markdown","metadata":{"id":"OlBiE00PlYOd"},"source":["##TIME SERIES DATA"]},{"cell_type":"code","metadata":{"id":"UWaz41yqlmiM"},"source":["time = pd.DataFrame()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RdTptz-eltr6"},"source":["time = dfmain.merge(popden, on = 'FIPS', how = 'left')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s1gFY0i7lvE_"},"source":["time = time.merge(unemp, on = 'FIPS', how = 'left')\n","time['Unemp_rate']=time['Unemp_rate'].fillna(0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tjSQAcktl1nC"},"source":["time = time.merge(pparty, on = 'FIPS', how = 'left')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WOeja1rzl79b"},"source":["time = time.merge(ed, on = 'FIPS', how = 'left')\n","time.drop('B', axis=1, inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"177kj-23mAbk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636846064,"user_tz":300,"elapsed":932,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"606c64d5-b34b-487b-d3cb-bfe7078b0dc9"},"source":["vac.drop(vac.loc[vac['FIPS']=='UNK'].index, inplace=True)\n","vac['FIPS']=vac['FIPS'].apply(lambda x: int(x))\n","# vaclatest = vac[vac['Date']=='11/04/2021']"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4174: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"id":"oSK_q3wKmF-X"},"source":["time = time.merge(vac, on ='FIPS', how = 'left')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jMXKNB8omLIw"},"source":["from sklearn.preprocessing import LabelEncoder\n","encoder = LabelEncoder()\n","time['Metro_status']=time['Metro_status'].fillna('Non-metro')\n","time['Metro_status'] = encoder.fit_transform(time['Metro_status'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2ujUyg_NnhHc"},"source":["per =  pd.DataFrame()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VxWflNFpnqfz"},"source":["time['REPUBLICAN']=per['R'] = time['REPUBLICAN']/time['Total']\n","time['DEMOCRAT'] = per['D'] = time['DEMOCRAT']/time['Total']\n","time['GREEN'] = per['G'] = time['GREEN']/time['Total']\n","time['OTHER'] = per['O'] = time['OTHER']/time['Total']\n","time['LIBERTARIAN'] = per['L'] = time['LIBERTARIAN']/time['Total']\n","per['d1'] = time['Series_Complete_Pop_Pct']\n","per['all'] = time['Administered_Dose1_Pop_Pct']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GLR9fqTxEjhx"},"source":["from datetime import datetime\n","datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')\n","time['Date'] = time['Date'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z_kYiDnaGEcu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636862925,"user_tz":300,"elapsed":66,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"9aaa54b3-599a-45b8-a8f0-2b88ffb3230d"},"source":["time['Date'][0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp('2021-12-03 00:00:00')"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"yUk-aPRN7lM3"},"source":["\n","y_data=pd.DataFrame()\n","y_data['FIPS'] = sorted(time['FIPS'].value_counts().index)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wP797mhAGyGo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638636862929,"user_tz":300,"elapsed":61,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"8a3760ea-7259-42d1-a2fd-64dff40229b2"},"source":["time"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-02</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-01</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-11-30</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>42.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-11-29</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.2</td>\n","      <td>42.8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1118547</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-17</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118548</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-16</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118549</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-15</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118550</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-14</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118551</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-13</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1118552 rows × 35 columns</p>\n","</div>"],"text/plain":["          FIPS  ... Metro_status\n","0         1123  ...            1\n","1         1123  ...            1\n","2         1123  ...            1\n","3         1123  ...            1\n","4         1123  ...            1\n","...        ...  ...          ...\n","1118547  55099  ...            1\n","1118548  55099  ...            1\n","1118549  55099  ...            1\n","1118550  55099  ...            1\n","1118551  55099  ...            1\n","\n","[1118552 rows x 35 columns]"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"FzAbGtt2H3GI"},"source":["time['Series_Complete_Pop_Pct'] = time['Series_Complete_Pop_Pct'].apply(lambda x: float(x))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6-VTlVnPJ7lS"},"source":["dic = {}\n","def percent(fips):\n","  dic[fips] = []\n","  for i in range(0,81,5):\n","    k={}\n","    if i == 0:\n","      k[i] = time[(time['Series_Complete_Pop_Pct']==0)& (time['FIPS']==fips)]['Date'].max()\n","    else:\n","      k[i] = time[(time['Series_Complete_Pop_Pct']>=i) & (time['FIPS']==fips)]['Date'].min()-time[(time['Series_Complete_Pop_Pct']==0) & (time['FIPS']==fips)]['Date'].max()\n","    dic[fips].append(k) \n","    k = {}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"viM5DOnTMip8"},"source":["l = len(main['FIPS'])\n","for i in range(l):\n","  percent(main['FIPS'][i])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8VB1Y-ZEPFZe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638637465317,"user_tz":300,"elapsed":32,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"3fe31e6e-6993-44de-fef5-4f76150c16eb"},"source":["time[time['FIPS']==1123]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-02</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-01</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-11-30</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>42.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-11-29</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.2</td>\n","      <td>42.8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>351</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2020-12-17</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>352</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2020-12-16</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>353</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2020-12-15</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>354</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2020-12-14</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>355</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.27912</td>\n","      <td>0.008051</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2020-12-13</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>356 rows × 35 columns</p>\n","</div>"],"text/plain":["     FIPS                 county_name  ... Administered_Dose1_Pop_Pct Metro_status\n","0    1123  Tallapoosa County, Alabama  ...                       43.1            1\n","1    1123  Tallapoosa County, Alabama  ...                       43.0            1\n","2    1123  Tallapoosa County, Alabama  ...                       43.0            1\n","3    1123  Tallapoosa County, Alabama  ...                       42.9            1\n","4    1123  Tallapoosa County, Alabama  ...                       42.8            1\n","..    ...                         ...  ...                        ...          ...\n","351  1123  Tallapoosa County, Alabama  ...                        0.0            1\n","352  1123  Tallapoosa County, Alabama  ...                        0.0            1\n","353  1123  Tallapoosa County, Alabama  ...                        0.0            1\n","354  1123  Tallapoosa County, Alabama  ...                        0.0            1\n","355  1123  Tallapoosa County, Alabama  ...                        0.0            1\n","\n","[356 rows x 35 columns]"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"HbtDF5zGT2eS"},"source":["m = {'FIPS':[],\n","    'VAC_PER':[],\n","    'Days':[]\n","       }\n","y=pd.DataFrame(m)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kigngBHcT9Xe"},"source":["for i in dic.keys():\n","  for j in range(1,len(dic[i])):\n","    a = list(dic[i][j])\n","    a = a[0]\n","    b = list(dic[i][j].values())\n","    b = b[0]\n","    y.loc[len(y.index)] = [i,a,b]\n","    #print(len(y.index))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kto6EyVzWJ_4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638637664188,"user_tz":300,"elapsed":36,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"0635dddf-3dcd-4766-cf62-2504fe44a111"},"source":["y"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>VAC_PER</th>\n","      <th>Days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123.0</td>\n","      <td>5.0</td>\n","      <td>48 days</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1123.0</td>\n","      <td>10.0</td>\n","      <td>72 days</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1123.0</td>\n","      <td>15.0</td>\n","      <td>98 days</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1123.0</td>\n","      <td>20.0</td>\n","      <td>129 days</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1123.0</td>\n","      <td>25.0</td>\n","      <td>212 days</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>50267</th>\n","      <td>55099.0</td>\n","      <td>60.0</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>50268</th>\n","      <td>55099.0</td>\n","      <td>65.0</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>50269</th>\n","      <td>55099.0</td>\n","      <td>70.0</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>50270</th>\n","      <td>55099.0</td>\n","      <td>75.0</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>50271</th>\n","      <td>55099.0</td>\n","      <td>80.0</td>\n","      <td>NaT</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>50272 rows × 3 columns</p>\n","</div>"],"text/plain":["          FIPS  VAC_PER     Days\n","0       1123.0      5.0  48 days\n","1       1123.0     10.0  72 days\n","2       1123.0     15.0  98 days\n","3       1123.0     20.0 129 days\n","4       1123.0     25.0 212 days\n","...        ...      ...      ...\n","50267  55099.0     60.0      NaT\n","50268  55099.0     65.0      NaT\n","50269  55099.0     70.0      NaT\n","50270  55099.0     75.0      NaT\n","50271  55099.0     80.0      NaT\n","\n","[50272 rows x 3 columns]"]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","metadata":{"id":"zquuA-9k4p3Q"},"source":["##MODEL DATA"]},{"cell_type":"code","metadata":{"id":"X5_7dAIee771"},"source":["model_data = main.copy(deep=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MiOBctIJ4YnU"},"source":["model_data['HESITANT_UNS']= model_data['HESITANT_S'].apply(lambda x: float(x))\n","model_data['HESITANT_S']= model_data['HESITANT_S'].apply(lambda x: float(x))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Klg6FUqIfBu3"},"source":["model_data = model_data.merge(y, on = 'FIPS', how='left')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UH1Z3ki_GpLi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638637664191,"user_tz":300,"elapsed":28,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"8003cc18-f4e6-484b-d475-36efd220bbd6"},"source":["model_data[(model_data['VAC_PER']==75.0) &(model_data['FIPS']==55099)].Days.values"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['NaT'], dtype='timedelta64[ns]')"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","metadata":{"id":"vH7H3q5MfcpI"},"source":["import numpy as np\n","model_data['Days'] = model_data['Days'].dt.days\n","model_data['Days'] = model_data['Days'].fillna(0)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kyp_iUpM7Tpb"},"source":["corrm = time.copy(deep=True)\n","corrm.drop(['HESITANT_UNS', 'OTHER', 'LIBERTARIAN', 'Total', 'CAD', 'Administered_Dose1_Pop_Pct'], axis=1, inplace=True)\n","corrm['Asian'] = corrm['Asian'].apply(lambda x: float(x))\n","corrm['Hispanic'] = corrm['Hispanic'].apply(lambda x: float(x))\n","corrm['Black'] = corrm['Black'].apply(lambda x: float(x))\n","corrm['White'] = corrm['White'].apply(lambda x: float(x))\n","mapper = {'HESITANT_S':'Strongly Hesitant', 'AIAN':'American Indian and Alaskan Native',\n","       'NHPI': 'Native Hawaiian and Pacific Islander', 'POPDEN': 'Population Density',\n","       'Unemp_rate': 'Unemployment Rate', 'LHSD':'Less than High School Diploma', 'HSD': 'High School Diploma',\n","       'Series_Complete_Pop_Pct': 'Fully Vaccinated', 'BDH':'Bachelors Degree and Higher' }\n","corrm.rename(mapper,inplace=True, axis =1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k6egeaVPN3d8","executionInfo":{"status":"ok","timestamp":1638637667998,"user_tz":300,"elapsed":13,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"714afd27-36c2-4136-f0e9-37cba1d751b6"},"source":["corrm[corrm['Date']=='2021-12-02']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>Strongly Hesitant</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>American Indian and Alaskan Native</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>Native Hawaiian and Pacific Islander</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>Population Density</th>\n","      <th>County_y</th>\n","      <th>Unemployment Rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>GREEN</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>Less than High School Diploma</th>\n","      <th>High School Diploma</th>\n","      <th>Bachelors Degree and Higher</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Fully Vaccinated</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.000000</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>18.442808</td>\n","      <td>2021-12-02</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>357</th>\n","      <td>1121</td>\n","      <td>Talladega County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1368</td>\n","      <td>0.87</td>\n","      <td>0.0229</td>\n","      <td>0.0043</td>\n","      <td>0.0061</td>\n","      <td>0.3237</td>\n","      <td>0.0003</td>\n","      <td>0.6263</td>\n","      <td>Talladega County</td>\n","      <td>Alabama</td>\n","      <td>42.219157</td>\n","      <td>Talladega County, AL</td>\n","      <td>7.0</td>\n","      <td>0.623475</td>\n","      <td>0.368393</td>\n","      <td>0.000000</td>\n","      <td>AL</td>\n","      <td>Talladega County</td>\n","      <td>19.670317</td>\n","      <td>33.720287</td>\n","      <td>14.960798</td>\n","      <td>2021-12-02</td>\n","      <td>Talladega County</td>\n","      <td>AL</td>\n","      <td>33.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>713</th>\n","      <td>1131</td>\n","      <td>Wilcox County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1337</td>\n","      <td>0.93</td>\n","      <td>0.0053</td>\n","      <td>0.0009</td>\n","      <td>0.0003</td>\n","      <td>0.6938</td>\n","      <td>0</td>\n","      <td>0.2684</td>\n","      <td>Wilcox County</td>\n","      <td>Alabama</td>\n","      <td>4.697370</td>\n","      <td>Wilcox County, AL</td>\n","      <td>14.7</td>\n","      <td>0.310520</td>\n","      <td>0.685753</td>\n","      <td>0.000000</td>\n","      <td>AL</td>\n","      <td>Wilcox County</td>\n","      <td>23.545122</td>\n","      <td>39.471466</td>\n","      <td>12.496486</td>\n","      <td>2021-12-02</td>\n","      <td>Wilcox County</td>\n","      <td>AL</td>\n","      <td>48.7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1069</th>\n","      <td>1129</td>\n","      <td>Washington County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1337</td>\n","      <td>0.73</td>\n","      <td>0.0146</td>\n","      <td>0.0731</td>\n","      <td>0.0025</td>\n","      <td>0.2354</td>\n","      <td>0</td>\n","      <td>0.6495</td>\n","      <td>Washington County</td>\n","      <td>Alabama</td>\n","      <td>5.948772</td>\n","      <td>Washington County, AL</td>\n","      <td>8.0</td>\n","      <td>0.739522</td>\n","      <td>0.254394</td>\n","      <td>0.000000</td>\n","      <td>AL</td>\n","      <td>Washington County</td>\n","      <td>17.371761</td>\n","      <td>43.063633</td>\n","      <td>12.665257</td>\n","      <td>2021-12-02</td>\n","      <td>Washington County</td>\n","      <td>AL</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1425</th>\n","      <td>1133</td>\n","      <td>Winston County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1379</td>\n","      <td>0.7</td>\n","      <td>0.0315</td>\n","      <td>0.0034</td>\n","      <td>0.0016</td>\n","      <td>0.0073</td>\n","      <td>0.0005</td>\n","      <td>0.9370</td>\n","      <td>Winston County</td>\n","      <td>Alabama</td>\n","      <td>15.038338</td>\n","      <td>Winston County, AL</td>\n","      <td>4.7</td>\n","      <td>0.903492</td>\n","      <td>0.086317</td>\n","      <td>0.000000</td>\n","      <td>AL</td>\n","      <td>Winston County</td>\n","      <td>21.187923</td>\n","      <td>38.214035</td>\n","      <td>12.829330</td>\n","      <td>2021-12-02</td>\n","      <td>Winston County</td>\n","      <td>AL</td>\n","      <td>20.4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1116773</th>\n","      <td>55079</td>\n","      <td>Milwaukee County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.088</td>\n","      <td>0.81</td>\n","      <td>0.1500</td>\n","      <td>0.0047</td>\n","      <td>0.0428</td>\n","      <td>0.2606</td>\n","      <td>0.0002</td>\n","      <td>0.5124</td>\n","      <td>Milwaukee County</td>\n","      <td>Wisconsin</td>\n","      <td>1525.658962</td>\n","      <td>Milwaukee County, WI</td>\n","      <td>8.2</td>\n","      <td>0.292735</td>\n","      <td>0.691264</td>\n","      <td>0.000466</td>\n","      <td>WI</td>\n","      <td>Milwaukee County</td>\n","      <td>11.713523</td>\n","      <td>28.367804</td>\n","      <td>30.966558</td>\n","      <td>2021-12-02</td>\n","      <td>Milwaukee County</td>\n","      <td>WI</td>\n","      <td>57.8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1117129</th>\n","      <td>55121</td>\n","      <td>Trempealeau County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0959</td>\n","      <td>0.28</td>\n","      <td>0.0840</td>\n","      <td>0.0034</td>\n","      <td>0.0043</td>\n","      <td>0.0051</td>\n","      <td>0</td>\n","      <td>0.8953</td>\n","      <td>Trempealeau County</td>\n","      <td>Wisconsin</td>\n","      <td>15.506148</td>\n","      <td>Trempealeau County, WI</td>\n","      <td>7.0</td>\n","      <td>0.574317</td>\n","      <td>0.408648</td>\n","      <td>0.000195</td>\n","      <td>WI</td>\n","      <td>Trempealeau County</td>\n","      <td>9.327148</td>\n","      <td>39.044342</td>\n","      <td>19.277769</td>\n","      <td>2021-12-02</td>\n","      <td>Trempealeau County</td>\n","      <td>WI</td>\n","      <td>60.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1117485</th>\n","      <td>56001</td>\n","      <td>Albany County, Wyoming</td>\n","      <td>WYOMING</td>\n","      <td>0.1405</td>\n","      <td>0.25</td>\n","      <td>0.0953</td>\n","      <td>0.0091</td>\n","      <td>0.0327</td>\n","      <td>0.0150</td>\n","      <td>0.0003</td>\n","      <td>0.8248</td>\n","      <td>Albany County</td>\n","      <td>Wyoming</td>\n","      <td>3.441773</td>\n","      <td>Albany County, WY</td>\n","      <td>4.0</td>\n","      <td>0.457693</td>\n","      <td>0.485062</td>\n","      <td>0.000000</td>\n","      <td>WY</td>\n","      <td>Albany County</td>\n","      <td>4.050845</td>\n","      <td>14.685477</td>\n","      <td>51.767006</td>\n","      <td>2021-12-02</td>\n","      <td>Albany County</td>\n","      <td>WY</td>\n","      <td>49.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1117841</th>\n","      <td>55067</td>\n","      <td>Langlade County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.35</td>\n","      <td>0.0197</td>\n","      <td>0.0069</td>\n","      <td>0.0022</td>\n","      <td>0.0125</td>\n","      <td>0.0002</td>\n","      <td>0.9383</td>\n","      <td>Langlade County</td>\n","      <td>Wisconsin</td>\n","      <td>8.498077</td>\n","      <td>Langlade County, WI</td>\n","      <td>6.5</td>\n","      <td>0.656516</td>\n","      <td>0.331751</td>\n","      <td>0.000269</td>\n","      <td>WI</td>\n","      <td>Langlade County</td>\n","      <td>9.747293</td>\n","      <td>42.337368</td>\n","      <td>16.656048</td>\n","      <td>2021-12-02</td>\n","      <td>Langlade County</td>\n","      <td>WI</td>\n","      <td>50.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118197</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.0060</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.000117</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>16.482237</td>\n","      <td>2021-12-02</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>57.8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3142 rows × 29 columns</p>\n","</div>"],"text/plain":["          FIPS                    county_name  ... Fully Vaccinated Metro_status\n","1         1123     Tallapoosa County, Alabama  ...             36.3            1\n","357       1121      Talladega County, Alabama  ...             33.9            1\n","713       1131         Wilcox County, Alabama  ...             48.7            1\n","1069      1129     Washington County, Alabama  ...             43.0            1\n","1425      1133        Winston County, Alabama  ...             20.4            1\n","...        ...                            ...  ...              ...          ...\n","1116773  55079    Milwaukee County, Wisconsin  ...             57.8            0\n","1117129  55121  Trempealeau County, Wisconsin  ...             60.6            1\n","1117485  56001         Albany County, Wyoming  ...             49.3            1\n","1117841  55067     Langlade County, Wisconsin  ...             50.6            1\n","1118197  55099        Price County, Wisconsin  ...             57.8            1\n","\n","[3142 rows x 29 columns]"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","metadata":{"id":"YA6_pD53MoFD"},"source":["corrm = corrm[['FIPS','county_name', 'State_x', 'Strongly Hesitant', 'SVI', 'Hispanic', 'Asian', 'Black', 'White', 'Population Density', 'Unemployment Rate', 'REPUBLICAN', 'DEMOCRAT', 'GREEN', 'Less than High School Diploma', 'High School Diploma', 'Bachelors Degree and Higher','Metro_status','Date','Fully Vaccinated' ]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OM-YGpn9DmGV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638637671312,"user_tz":300,"elapsed":2993,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"efb04693-23b8-4ce7-bd3f-e04728dc6195"},"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","c= corrm.corr()\n","c\n","plt.figure(figsize=(20,10))\n","sns.heatmap(c, annot =True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8bd163d0>"]},"metadata":{},"execution_count":92},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"vv1Qx6ySWduT"},"source":["##Prediction and model fitting"]},{"cell_type":"code","metadata":{"id":"Zjs_CsGR5TZe"},"source":["modell=model_data.copy(deep=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"g2cOV7Oa5b3d"},"source":["model_data.drop(model_data.index[(model_data['Days']== 0) & (model_data['VAC_PER']!=80)], inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7n5lA4yACnLi","executionInfo":{"status":"ok","timestamp":1638637671314,"user_tz":300,"elapsed":14,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"58e69d26-f3b6-4947-b316-16feaac459fc"},"source":["model_data"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","      <th>VAC_PER</th>\n","      <th>Days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1383</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","      <td>5.0</td>\n","      <td>48.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1383</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","      <td>10.0</td>\n","      <td>72.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1383</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1383</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","      <td>20.0</td>\n","      <td>129.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.1383</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>212.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>50263</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2021-12-03</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>58.0</td>\n","      <td>61.7</td>\n","      <td>1</td>\n","      <td>40.0</td>\n","      <td>115.0</td>\n","    </tr>\n","    <tr>\n","      <th>50264</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2021-12-03</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>58.0</td>\n","      <td>61.7</td>\n","      <td>1</td>\n","      <td>45.0</td>\n","      <td>137.0</td>\n","    </tr>\n","    <tr>\n","      <th>50265</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2021-12-03</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>58.0</td>\n","      <td>61.7</td>\n","      <td>1</td>\n","      <td>50.0</td>\n","      <td>204.0</td>\n","    </tr>\n","    <tr>\n","      <th>50266</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2021-12-03</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>58.0</td>\n","      <td>61.7</td>\n","      <td>1</td>\n","      <td>55.0</td>\n","      <td>256.0</td>\n","    </tr>\n","    <tr>\n","      <th>50271</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.0906</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2021-12-03</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>58.0</td>\n","      <td>61.7</td>\n","      <td>1</td>\n","      <td>80.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>30215 rows × 37 columns</p>\n","</div>"],"text/plain":["        FIPS                 county_name  ... VAC_PER   Days\n","0       1123  Tallapoosa County, Alabama  ...     5.0   48.0\n","1       1123  Tallapoosa County, Alabama  ...    10.0   72.0\n","2       1123  Tallapoosa County, Alabama  ...    15.0   98.0\n","3       1123  Tallapoosa County, Alabama  ...    20.0  129.0\n","4       1123  Tallapoosa County, Alabama  ...    25.0  212.0\n","...      ...                         ...  ...     ...    ...\n","50263  55099     Price County, Wisconsin  ...    40.0  115.0\n","50264  55099     Price County, Wisconsin  ...    45.0  137.0\n","50265  55099     Price County, Wisconsin  ...    50.0  204.0\n","50266  55099     Price County, Wisconsin  ...    55.0  256.0\n","50271  55099     Price County, Wisconsin  ...    80.0    0.0\n","\n","[30215 rows x 37 columns]"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"biG46Q-qgEJ-"},"source":["\n","def data(i,j):\n","  LRdata = model_data[['FIPS','SVI','HESITANT_S','Asian','Hispanic','Black','REPUBLICAN', 'DEMOCRAT','GREEN', 'LHSD' ,'HSD', 'BDH','Unemp_rate','Series_Complete_Pop_Pct','Administered_Dose1_Pop_Pct','Metro_status','VAC_PER','Days']].copy(deep=True)\n","  # LRdata.drop(LRdata.index[LRdata['Series_Complete_Pop_Pct'] < 5], inplace = True)\n","  LRtrain = LRdata[(LRdata['VAC_PER']<=i) & (LRdata['Series_Complete_Pop_Pct'] >= 5)].copy(deep=True)\n","  # _ = LRtrain.pop('VAC_PER')  \n","  LRtest = LRdata[(LRdata['VAC_PER']==j)].copy(deep=True)\n","  # _ = LRtest.pop('VAC_PER') \n","# LRdata[(LRdata['VAC_PER']==10.0) & (LRdata['Days']==0)]\n","\n","  yLR = LRtrain.pop('Days')\n","  _ = LRtrain.pop('Series_Complete_Pop_Pct')\n","  _ = LRtrain.pop('FIPS')\n","  _ = LRtest.pop('FIPS')\n","  median = LRtrain['REPUBLICAN'].median()\n","  LRtrain['REPUBLICAN'].fillna(median, inplace =True)\n","  median = LRtrain['DEMOCRAT'].median()\n","  LRtrain['DEMOCRAT'].fillna(median, inplace =True)\n","  median = LRtrain['GREEN'].median()\n","  LRtrain['GREEN'].fillna(median, inplace =True)\n","  median = LRtrain['LHSD'].median()\n","  LRtrain['LHSD'].fillna(median, inplace =True)\n","  median = LRtrain['HSD'].median()\n","  LRtrain['HSD'].fillna(median, inplace =True)\n","  median = LRtrain['BDH'].median()\n","  LRtrain['BDH'].fillna(median, inplace =True)\n","  median = LRtrain['SVI'].median()\n","  LRtrain['SVI'].fillna(median, inplace =True)\n","  LRtrain['Asian']= LRtrain['Asian'].apply(lambda x: float(x))\n","  LRtrain['Black']= LRtrain['Black'].apply(lambda x: float(x))\n","  LRtrain['Hispanic']= LRtrain['Hispanic'].apply(lambda x: float(x))\n","  LRtrain['SVI']= LRtrain['SVI'].apply(lambda x: float(x))\n","  LRtest['Asian']= LRtest['Asian'].apply(lambda x: float(x))\n","  LRtest['Black']= LRtest['Black'].apply(lambda x: float(x))\n","  LRtest['Hispanic']= LRtest['Hispanic'].apply(lambda x: float(x))\n","  LRtest['SVI']= LRtest['SVI'].apply(lambda x: float(x))\n","  median = LRtest['REPUBLICAN'].median()\n","  LRtest['REPUBLICAN'].fillna(median, inplace =True)\n","  median = LRtest['DEMOCRAT'].median()\n","  LRtest['DEMOCRAT'].fillna(median, inplace =True)\n","  median = LRtest['GREEN'].median()\n","  LRtest['GREEN'].fillna(median, inplace =True)\n","  median = LRtest['LHSD'].median()\n","  LRtest['LHSD'].fillna(median, inplace =True)\n","  median = LRtest['HSD'].median()\n","  LRtest['HSD'].fillna(median, inplace =True)\n","  median = LRtest['BDH'].median()\n","  LRtest['BDH'].fillna(median, inplace =True)\n","  median = LRtest['SVI'].median()\n","  LRtest['SVI'].fillna(median, inplace =True)\n","  _ = LRtest.pop('Series_Complete_Pop_Pct')\n","  # _ = LRtest.pop('VAC_PER') \n","  yLRt = LRtest.pop('Days')\n","  return LRtrain, LRtest, yLR, yLRt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0VPAOuBT3AhG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638637994517,"user_tz":300,"elapsed":323214,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"7c4f7e9c-7d04-4bca-c56e-dd917758fd08"},"source":["accuracy={}\n","k=5\n","l=10\n","from sklearn.metrics import mean_squared_error\n","for i in range(14):\n","  LRtrain, LRtest, yLR, yLRt = data(k,l)\n","  from sklearn.linear_model import LinearRegression\n","  lr = LinearRegression()\n","  model0 = lr.fit(LRtrain, yLR)\n","  from sklearn.ensemble import RandomForestRegressor\n","  rfr = RandomForestRegressor()\n","  model1 = rfr.fit(LRtrain, yLR)\n","  from xgboost import XGBRegressor\n","  xgb = XGBRegressor(objective ='reg:squarederror')\n","  model2 = xgb.fit(LRtrain, yLR)\n","  from sklearn.tree import DecisionTreeRegressor\n","  dtr = DecisionTreeRegressor()\n","  model3 =dtr.fit(LRtrain, yLR)\n","  LR = model0.score(LRtest, yLRt)\n","  RFR = model1.score(LRtest, yLRt)\n","  XGB = model2.score(LRtest, yLRt)\n","  DTR = model3.score(LRtest, yLRt)\n","  def RMS(a,b):\n","    RMSE = mean_squared_error(a, b, squared=False)\n","    RMPSE = np.sqrt((np.mean(np.square(a-b)/a)))\n","    return RMSE, RMPSE\n","  pred=[model0.predict(LRtest),model1.predict(LRtest),model2.predict(LRtest),model3.predict(LRtest)]\n","  for item in pred:\n","    print(RMS(yLRt, item))\n","\n","  print('Train Data size:',LRtrain.shape)\n","  print('Test Data size:',LRtest.shape)\n","  print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using Linear Regression. Accuracy:\", LR)\n","  print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using XGboost. Accuracy:\", XGB)\n","  print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using Random Forest Regressor. Accuracy:\", RFR)\n","  print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using Decision Tree Regressor. Accuracy:\", DTR)\n","  print('\\n')\n","  accuracy[l]=[LR, RFR, XGB, DTR]\n","  k+=5\n","  l+=5\n","  "],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(40.635163814905845, 8.205642072860165)\n","(29.32678031444829, 3.9275323712201016)\n","(33.209345009101895, 6.324764804909146)\n","(28.40597570321458, 2.9362726095586673)\n","Train Data size: (3126, 15)\n","Test Data size: (3123, 15)\n","Trained model with atleast 5 % vaccination and Prediction of 10 % vaccination using Linear Regression. Accuracy: 0.023637148008445408\n","Trained model with atleast 5 % vaccination and Prediction of 10 % vaccination using XGboost. Accuracy: 0.3478795228597178\n","Trained model with atleast 5 % vaccination and Prediction of 10 % vaccination using Random Forest Regressor. Accuracy: 0.49144727078155626\n","Trained model with atleast 5 % vaccination and Prediction of 10 % vaccination using Decision Tree Regressor. Accuracy: 0.5228810785661021\n","\n","\n","(40.34495891692146, 18.25194215227274)\n","(26.269977174998523, 3.842749003622277)\n","(33.909594904161835, 9.364788342725527)\n","(25.195740013359288, 2.351595066893376)\n","Train Data size: (6249, 15)\n","Test Data size: (3097, 15)\n","Trained model with atleast 10 % vaccination and Prediction of 15 % vaccination using Linear Regression. Accuracy: 0.2874130052621324\n","Trained model with atleast 10 % vaccination and Prediction of 15 % vaccination using XGboost. Accuracy: 0.49661005099789224\n","Trained model with atleast 10 % vaccination and Prediction of 15 % vaccination using Random Forest Regressor. Accuracy: 0.6978805206185458\n","Trained model with atleast 10 % vaccination and Prediction of 15 % vaccination using Decision Tree Regressor. Accuracy: 0.7220839852498415\n","\n","\n","(43.2467258145008, 22.11524672210426)\n","(27.72023247691568, 4.162790017323444)\n","(37.29109176225893, 11.785770044709336)\n","(26.06725553252001, 2.191257545566477)\n","Train Data size: (9346, 15)\n","Test Data size: (3037, 15)\n","Trained model with atleast 15 % vaccination and Prediction of 20 % vaccination using Linear Regression. Accuracy: 0.2664932765105633\n","Trained model with atleast 15 % vaccination and Prediction of 20 % vaccination using XGboost. Accuracy: 0.45460917213691143\n","Trained model with atleast 15 % vaccination and Prediction of 20 % vaccination using Random Forest Regressor. Accuracy: 0.6986360013284435\n","Trained model with atleast 15 % vaccination and Prediction of 20 % vaccination using Decision Tree Regressor. Accuracy: 0.7335054990579538\n","\n","\n","(50.70027409621505, 25.450711609824364)\n","(35.289208400511434, 4.1612836643725215)\n","(47.47572440689377, 13.319995571197518)\n","(33.32122110801864, 2.540495813916545)\n","Train Data size: (12383, 15)\n","Test Data size: (2966, 15)\n","Trained model with atleast 20 % vaccination and Prediction of 25 % vaccination using Linear Regression. Accuracy: 0.2311594618415891\n","Trained model with atleast 20 % vaccination and Prediction of 25 % vaccination using XGboost. Accuracy: 0.32584639716446206\n","Trained model with atleast 20 % vaccination and Prediction of 25 % vaccination using Random Forest Regressor. Accuracy: 0.6275229727543542\n","Trained model with atleast 20 % vaccination and Prediction of 25 % vaccination using Decision Tree Regressor. Accuracy: 0.667908716702879\n","\n","\n","(61.09540252405817, 30.026094597941636)\n","(41.38362932368305, 6.0003364340412455)\n","(56.09963493106706, 16.872632224352973)\n","(39.98847660101051, 2.893158158790467)\n","Train Data size: (15349, 15)\n","Test Data size: (2875, 15)\n","Trained model with atleast 25 % vaccination and Prediction of 30 % vaccination using Linear Regression. Accuracy: 0.20079043412777542\n","Trained model with atleast 25 % vaccination and Prediction of 30 % vaccination using XGboost. Accuracy: 0.3261493019215369\n","Trained model with atleast 25 % vaccination and Prediction of 30 % vaccination using Random Forest Regressor. Accuracy: 0.6333085673528067\n","Trained model with atleast 25 % vaccination and Prediction of 30 % vaccination using Decision Tree Regressor. Accuracy: 0.657616102319428\n","\n","\n","(68.62610336604868, 31.713530566071842)\n","(45.20577908267256, 5.517848666698191)\n","(61.80684730221862, 18.104968288023187)\n","(44.20703148076925, 3.077324881208468)\n","Train Data size: (18224, 15)\n","Test Data size: (2622, 15)\n","Trained model with atleast 30 % vaccination and Prediction of 35 % vaccination using Linear Regression. Accuracy: 0.17881644798706953\n","Trained model with atleast 30 % vaccination and Prediction of 35 % vaccination using XGboost. Accuracy: 0.3339071920294294\n","Trained model with atleast 30 % vaccination and Prediction of 35 % vaccination using Random Forest Regressor. Accuracy: 0.6436723870028256\n","Trained model with atleast 30 % vaccination and Prediction of 35 % vaccination using Decision Tree Regressor. Accuracy: 0.6592434068385931\n","\n","\n","(68.67751616597127, 31.545126553472546)\n","(45.823169417697066, 5.494192509951276)\n","(60.60044250887567, 17.69170659031643)\n","(45.5216767243535, 3.136515397402427)\n","Train Data size: (20846, 15)\n","Test Data size: (2143, 15)\n","Trained model with atleast 35 % vaccination and Prediction of 40 % vaccination using Linear Regression. Accuracy: 0.19649843791413069\n","Trained model with atleast 35 % vaccination and Prediction of 40 % vaccination using XGboost. Accuracy: 0.3743821136638422\n","Trained model with atleast 35 % vaccination and Prediction of 40 % vaccination using Random Forest Regressor. Accuracy: 0.642292690586196\n","Trained model with atleast 35 % vaccination and Prediction of 40 % vaccination using Decision Tree Regressor. Accuracy: 0.6469842628048064\n","\n","\n","(66.19499490006112, 31.385590686307523)\n","(47.061914925735884, 5.1855482615629445)\n","(61.11840355334041, 18.232515350198927)\n","(47.92885238239402, 3.2628959963751702)\n","Train Data size: (22989, 15)\n","Test Data size: (1601, 15)\n","Trained model with atleast 40 % vaccination and Prediction of 45 % vaccination using Linear Regression. Accuracy: 0.22004385727064424\n","Trained model with atleast 40 % vaccination and Prediction of 45 % vaccination using XGboost. Accuracy: 0.3350884452534233\n","Trained model with atleast 40 % vaccination and Prediction of 45 % vaccination using Random Forest Regressor. Accuracy: 0.6057614711082702\n","Trained model with atleast 40 % vaccination and Prediction of 45 % vaccination using Decision Tree Regressor. Accuracy: 0.5911029876965677\n","\n","\n","(63.62788524606911, 28.59135081358262)\n","(49.79870319197248, 3.9550496192160884)\n","(61.86228790714836, 16.53112207135172)\n","(50.727732980187696, 3.2801066882217382)\n","Train Data size: (24590, 15)\n","Test Data size: (1106, 15)\n","Trained model with atleast 45 % vaccination and Prediction of 50 % vaccination using Linear Regression. Accuracy: 0.24330896932351365\n","Trained model with atleast 45 % vaccination and Prediction of 50 % vaccination using XGboost. Accuracy: 0.28472085362642896\n","Trained model with atleast 45 % vaccination and Prediction of 50 % vaccination using Random Forest Regressor. Accuracy: 0.5364893954104614\n","Trained model with atleast 45 % vaccination and Prediction of 50 % vaccination using Decision Tree Regressor. Accuracy: 0.5190338455631294\n","\n","\n","(62.73687316003101, 29.029576902128674)\n","(49.73589362041821, 4.436792013486105)\n","(60.71624972410101, 15.972515915753212)\n","(50.74851403387794, 3.24295316102201)\n","Train Data size: (25696, 15)\n","Test Data size: (668, 15)\n","Trained model with atleast 50 % vaccination and Prediction of 55 % vaccination using Linear Regression. Accuracy: 0.2602634120062993\n","Trained model with atleast 50 % vaccination and Prediction of 55 % vaccination using XGboost. Accuracy: 0.3071467826184827\n","Trained model with atleast 50 % vaccination and Prediction of 55 % vaccination using Random Forest Regressor. Accuracy: 0.5350875120592016\n","Trained model with atleast 50 % vaccination and Prediction of 55 % vaccination using Decision Tree Regressor. Accuracy: 0.5159636009756348\n","\n","\n","(62.705811125470866, 27.785735245291576)\n","(50.79282794923985, 4.607840689179151)\n","(63.72761192905259, 16.508093880740535)\n","(51.99181328486869, 3.2390436434032135)\n","Train Data size: (26364, 15)\n","Test Data size: (370, 15)\n","Trained model with atleast 55 % vaccination and Prediction of 60 % vaccination using Linear Regression. Accuracy: 0.22575997499587908\n","Trained model with atleast 55 % vaccination and Prediction of 60 % vaccination using XGboost. Accuracy: 0.20032166971823284\n","Trained model with atleast 55 % vaccination and Prediction of 60 % vaccination using Random Forest Regressor. Accuracy: 0.491998697866994\n","Trained model with atleast 55 % vaccination and Prediction of 60 % vaccination using Decision Tree Regressor. Accuracy: 0.4677324776481896\n","\n","\n","(62.702220756058985, 22.914161007908486)\n","(52.70015205899141, 3.30062018750471)\n","(61.431944106849876, 7.715628532472369)\n","(53.56271357683707, 3.312856613374151)\n","Train Data size: (26734, 15)\n","Test Data size: (196, 15)\n","Trained model with atleast 60 % vaccination and Prediction of 65 % vaccination using Linear Regression. Accuracy: 0.2117543455107247\n","Trained model with atleast 60 % vaccination and Prediction of 65 % vaccination using XGboost. Accuracy: 0.243368777352167\n","Trained model with atleast 60 % vaccination and Prediction of 65 % vaccination using Random Forest Regressor. Accuracy: 0.4431740375812814\n","Trained model with atleast 60 % vaccination and Prediction of 65 % vaccination using Decision Tree Regressor. Accuracy: 0.42479734534695157\n","\n","\n","(64.98812585859842, 25.19954849645269)\n","(57.81161329662721, 3.5393054206138417)\n","(65.3925706034424, 8.796646123707424)\n","(58.2678670443402, 3.6163605334518865)\n","Train Data size: (26930, 15)\n","Test Data size: (97, 15)\n","Trained model with atleast 65 % vaccination and Prediction of 70 % vaccination using Linear Regression. Accuracy: 0.19220950344043508\n","Trained model with atleast 65 % vaccination and Prediction of 70 % vaccination using XGboost. Accuracy: 0.18212386936479552\n","Trained model with atleast 65 % vaccination and Prediction of 70 % vaccination using Random Forest Regressor. Accuracy: 0.36076449084005435\n","Trained model with atleast 65 % vaccination and Prediction of 70 % vaccination using Decision Tree Regressor. Accuracy: 0.3506348834320884\n","\n","\n","(71.81584634933259, 28.95373515129714)\n","(60.82448859664566, 3.7659954733409413)\n","(69.03642716547745, 10.201994583252771)\n","(65.16150504040276, 4.197217217596592)\n","Train Data size: (27027, 15)\n","Test Data size: (46, 15)\n","Trained model with atleast 70 % vaccination and Prediction of 75 % vaccination using Linear Regression. Accuracy: 0.2532565774087604\n","Trained model with atleast 70 % vaccination and Prediction of 75 % vaccination using XGboost. Accuracy: 0.3099390454842328\n","Trained model with atleast 70 % vaccination and Prediction of 75 % vaccination using Random Forest Regressor. Accuracy: 0.4643417819349498\n","Trained model with atleast 70 % vaccination and Prediction of 75 % vaccination using Decision Tree Regressor. Accuracy: 0.38522945214313775\n","\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LDPZc3TM15Oj","executionInfo":{"status":"ok","timestamp":1638638027305,"user_tz":300,"elapsed":32813,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"f6651238-634c-4f92-9b75-544c968c62fc"},"source":["accuracy={}\n","k=75\n","l=80\n","from sklearn.metrics import mean_squared_error\n","for i in range(1):\n","  LRtrain, LRtest, yLR, yLRt = data(k,l)\n","  from sklearn.linear_model import LinearRegression\n","  lr = LinearRegression()\n","  model0 = lr.fit(LRtrain, yLR)\n","  from sklearn.ensemble import RandomForestRegressor\n","  rfr = RandomForestRegressor()\n","  model1 = rfr.fit(LRtrain, yLR)\n","  from xgboost import XGBRegressor\n","  xgb = XGBRegressor(objective ='reg:squarederror')\n","  model2 = xgb.fit(LRtrain, yLR)\n","  from sklearn.tree import DecisionTreeRegressor\n","  dtr = DecisionTreeRegressor()\n","  model3 =dtr.fit(LRtrain, yLR)\n","  # LR = model0.score(LRtest, yLRt)\n","  # RFR = model1.score(LRtest, yLRt)\n","  # XGB = model2.score(LRtest, yLRt)\n","  # DTR = model3.score(LRtest, yLRt)\n","  # def RMS(a,b):\n","  #   RMSE = mean_squared_error(a, b, squared=False)\n","  #   RMPSE = np.sqrt((np.mean(np.square(a-b)/a)))\n","  #   return RMSE, RMPSE\n","  pred=[model0.predict(LRtest),model1.predict(LRtest),model2.predict(LRtest),model3.predict(LRtest)]\n","  # for item in pred:\n","  #   print(RMS(yLRt, item))\n","\n","  print('Train Data size:',LRtrain.shape)\n","  print('Test Data size:',LRtest.shape)\n","  # print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using Linear Regression. Accuracy:\", LR)\n","  # print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using XGboost. Accuracy:\", XGB)\n","  # print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using Random Forest Regressor. Accuracy:\", RFR)\n","  # print('Trained model with atleast',k,'% vaccination and Prediction of',l,\"% vaccination using Decision Tree Regressor. Accuracy:\", DTR)\n","  # print('\\n')\n","  # accuracy[l]=[LR, RFR, XGB, DTR]\n","  k+=5\n","  l+=5\n","  "],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Data size: (27073, 15)\n","Test Data size: (3142, 15)\n"]}]},{"cell_type":"code","metadata":{"id":"76qgo0j0ec3z"},"source":["csv_80 = pd.DataFrame({'FIPS':list(model_data['FIPS'].unique())})\n","csv_80.sort_values(by = 'FIPS', inplace = True)\n","for i in range(4):\n","  csv_80['Pred'+str(i)]=pred[i]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-D2jYKaus4fu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638638121273,"user_tz":300,"elapsed":93994,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"466f802b-635f-4f82-935a-bdc4e4a1093f"},"source":["import re\n","from datetime import timedelta, date, datetime\n","times= time.copy(deep=True)\n","def date_conv(date, a):\n","  EndDate = date+timedelta(days=a)\n","  Date = datetime.strftime(EndDate, \"%b-%d-%Y\")\n","  return Date\n","for i in range(4):\n","  csv_80['80_'+str(i)] = ''\n","  for j in range(len(csv_80['Pred'+str(i)])):\n","    date = times[(times['Series_Complete_Pop_Pct']==0) & (times['FIPS']==csv_80.iloc[j]['FIPS'])]['Date'].max()\n","    a= csv_80['Pred'+str(i)][j]\n","    csv_80['80_'+str(i)][j] = date_conv(date, int(a))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n"]}]},{"cell_type":"code","metadata":{"id":"8GLyM-_8x5bo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638638121585,"user_tz":300,"elapsed":327,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"0274fc7e-ed04-4741-ca01-6cc6d50f7c01"},"source":["a = model_data[model_data['VAC_PER']==80]['Days']\n","csv_80['Actual']=''\n","i=0\n","times= time.copy(deep=True)\n","for j in a:\n","    if j!=0:\n","      date = times[(times['Series_Complete_Pop_Pct']==0) & (times['FIPS']==csv_80.iloc[i]['FIPS'])]['Date'].max()\n","      csv_80['Actual'][i]= date_conv(date, int(j))\n","      i+=1\n","    else:\n","      i+=1"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4nZ-dySAD1wZ","executionInfo":{"status":"ok","timestamp":1638638121585,"user_tz":300,"elapsed":9,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"048e1923-36a0-4876-946d-64e529707d05"},"source":["csv_80"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>Pred0</th>\n","      <th>Pred1</th>\n","      <th>Pred2</th>\n","      <th>Pred3</th>\n","      <th>80_0</th>\n","      <th>80_1</th>\n","      <th>80_2</th>\n","      <th>80_3</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>277</th>\n","      <td>1001</td>\n","      <td>374.461381</td>\n","      <td>255.72</td>\n","      <td>329.559113</td>\n","      <td>314.0</td>\n","      <td>Apr-11-2022</td>\n","      <td>Dec-13-2021</td>\n","      <td>Feb-25-2022</td>\n","      <td>Feb-10-2022</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>285</th>\n","      <td>1003</td>\n","      <td>381.501150</td>\n","      <td>251.21</td>\n","      <td>334.335938</td>\n","      <td>298.0</td>\n","      <td>Mar-25-2022</td>\n","      <td>Nov-15-2021</td>\n","      <td>Feb-06-2022</td>\n","      <td>Jan-01-2022</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>1005</td>\n","      <td>373.993791</td>\n","      <td>245.28</td>\n","      <td>279.460236</td>\n","      <td>201.0</td>\n","      <td>Jan-15-2022</td>\n","      <td>Sep-09-2021</td>\n","      <td>Oct-13-2021</td>\n","      <td>Jul-27-2021</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>341</th>\n","      <td>1007</td>\n","      <td>357.855932</td>\n","      <td>255.39</td>\n","      <td>313.755371</td>\n","      <td>314.0</td>\n","      <td>Dec-31-2021</td>\n","      <td>Sep-20-2021</td>\n","      <td>Nov-17-2021</td>\n","      <td>Nov-18-2021</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>378</th>\n","      <td>1009</td>\n","      <td>391.730413</td>\n","      <td>238.48</td>\n","      <td>368.777679</td>\n","      <td>225.0</td>\n","      <td>Feb-01-2022</td>\n","      <td>Sep-01-2021</td>\n","      <td>Jan-09-2022</td>\n","      <td>Aug-19-2021</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3084</th>\n","      <td>56037</td>\n","      <td>364.523030</td>\n","      <td>299.07</td>\n","      <td>269.535614</td>\n","      <td>328.0</td>\n","      <td>Jan-19-2022</td>\n","      <td>Nov-15-2021</td>\n","      <td>Oct-16-2021</td>\n","      <td>Dec-14-2021</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3051</th>\n","      <td>56039</td>\n","      <td>326.883657</td>\n","      <td>291.78</td>\n","      <td>257.524750</td>\n","      <td>302.0</td>\n","      <td>Nov-30-2021</td>\n","      <td>Oct-26-2021</td>\n","      <td>Sep-22-2021</td>\n","      <td>Nov-06-2021</td>\n","      <td>Oct-14-2021</td>\n","    </tr>\n","    <tr>\n","      <th>3016</th>\n","      <td>56041</td>\n","      <td>331.822427</td>\n","      <td>242.35</td>\n","      <td>268.640259</td>\n","      <td>293.0</td>\n","      <td>Dec-18-2021</td>\n","      <td>Sep-20-2021</td>\n","      <td>Oct-16-2021</td>\n","      <td>Nov-10-2021</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3106</th>\n","      <td>56043</td>\n","      <td>352.929233</td>\n","      <td>255.96</td>\n","      <td>282.533325</td>\n","      <td>291.0</td>\n","      <td>Jan-02-2022</td>\n","      <td>Sep-27-2021</td>\n","      <td>Oct-24-2021</td>\n","      <td>Nov-02-2021</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3078</th>\n","      <td>56045</td>\n","      <td>334.997641</td>\n","      <td>247.83</td>\n","      <td>261.649261</td>\n","      <td>256.0</td>\n","      <td>Dec-15-2021</td>\n","      <td>Sep-19-2021</td>\n","      <td>Oct-03-2021</td>\n","      <td>Sep-28-2021</td>\n","      <td></td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3142 rows × 10 columns</p>\n","</div>"],"text/plain":["       FIPS       Pred0   Pred1  ...         80_2         80_3       Actual\n","277    1001  374.461381  255.72  ...  Feb-25-2022  Feb-10-2022             \n","285    1003  381.501150  251.21  ...  Feb-06-2022  Jan-01-2022             \n","312    1005  373.993791  245.28  ...  Oct-13-2021  Jul-27-2021             \n","341    1007  357.855932  255.39  ...  Nov-17-2021  Nov-18-2021             \n","378    1009  391.730413  238.48  ...  Jan-09-2022  Aug-19-2021             \n","...     ...         ...     ...  ...          ...          ...          ...\n","3084  56037  364.523030  299.07  ...  Oct-16-2021  Dec-14-2021             \n","3051  56039  326.883657  291.78  ...  Sep-22-2021  Nov-06-2021  Oct-14-2021\n","3016  56041  331.822427  242.35  ...  Oct-16-2021  Nov-10-2021             \n","3106  56043  352.929233  255.96  ...  Oct-24-2021  Nov-02-2021             \n","3078  56045  334.997641  247.83  ...  Oct-03-2021  Sep-28-2021             \n","\n","[3142 rows x 10 columns]"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","metadata":{"id":"e5BZmMvz-WuI"},"source":["csv_80.to_csv('CSV_80.csv', index= False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BMwbAACkHru5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638638126051,"user_tz":300,"elapsed":3239,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"fd74d73b-e675-422e-8ff1-869a5eebb598"},"source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# vac.rename({'fips':'FIPS','date':'Date','recip_county':'Recip_County', 'recip_state': 'Recip_State', 'series_complete_pop_pct':'Series_Complete_Pop_Pct','administered_dose1_pop_pct':'Administered_Dose1_Pop_Pct', 'metro_status': 'Metro_status'}, inplace =True, axis = 1)\n","\n","# corr.rename({'POPDEN':'Population density','Unemp_rate':'Unemployment rate','AIAN':'American Indian/ Alaskan Native','NHPI':'Native Hawaiian/ Pacific Islander','LHSD':'Less than high school','HSD':'High School Diploma','CAD':'College and Associate Degree','BDH':'Bachelor Degree Holder','Series_Complete_Pop_Pct':'% both doses taken','Administered_Dose1_Pop_Pct':'% only one dose taken'})\n","\n","\n","\n","plt.figure(figsize = (20,10))\n","\n","correlate = modell.copy(deep=True)\n","correlate.rename({'HESITANT_UNS':'Hesitant or Unsure','HESITANT_S':'Strongly Hesitant','POPDEN':'Population density','Unemp_rate':'Unemployment rate','AIAN':'American Indian/ Alaskan Native','NHPI':'Native Hawaiian/ Pacific Islander','LHSD':'Less than high school','HSD':'High School Diploma','CAD':'College and Associate Degree','BDH':'Bachelor Degree & Higher','Series_Complete_Pop_Pct':'% both doses taken','Administered_Dose1_Pop_Pct':'% only one dose taken'}, inplace=True, axis=1)\n","j= correlate.corr()\n","sns.heatmap(j, annot=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e8b71e1d0>"]},"metadata":{},"execution_count":104},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"1eFr_4L9GsVO"},"source":["##PHASE 3 ANALYSIS\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hE4EKvKtGtDm","executionInfo":{"status":"ok","timestamp":1638638126052,"user_tz":300,"elapsed":30,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"ab09e8e6-9a1b-4b2c-9955-d61d686ebd41"},"source":["time"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-03</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.4</td>\n","      <td>43.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-02</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-12-01</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-11-30</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.3</td>\n","      <td>42.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1123</td>\n","      <td>Tallapoosa County, Alabama</td>\n","      <td>ALABAMA</td>\n","      <td>0.24</td>\n","      <td>0.1383</td>\n","      <td>0.89</td>\n","      <td>0.0242</td>\n","      <td>0.0022</td>\n","      <td>0.0036</td>\n","      <td>0.2697</td>\n","      <td>0</td>\n","      <td>0.6887</td>\n","      <td>Tallapoosa County</td>\n","      <td>Alabama</td>\n","      <td>21.896958</td>\n","      <td>Tallapoosa County, AL</td>\n","      <td>6.9</td>\n","      <td>0.712829</td>\n","      <td>0.279120</td>\n","      <td>0.008051</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>20991.0</td>\n","      <td>AL</td>\n","      <td>Tallapoosa County</td>\n","      <td>19.346287</td>\n","      <td>32.706596</td>\n","      <td>29.504309</td>\n","      <td>18.442808</td>\n","      <td>2021-11-29</td>\n","      <td>Tallapoosa County</td>\n","      <td>AL</td>\n","      <td>36.2</td>\n","      <td>42.8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1118547</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-17</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118548</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-16</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118549</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-15</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118550</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-14</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1118551</th>\n","      <td>55099</td>\n","      <td>Price County, Wisconsin</td>\n","      <td>WISCONSIN</td>\n","      <td>0.2039</td>\n","      <td>0.0906</td>\n","      <td>0.16</td>\n","      <td>0.0177</td>\n","      <td>0.0096</td>\n","      <td>0.006</td>\n","      <td>0.0083</td>\n","      <td>0.0085</td>\n","      <td>0.9407</td>\n","      <td>Price County</td>\n","      <td>Wisconsin</td>\n","      <td>4.153341</td>\n","      <td>Price County, WI</td>\n","      <td>6.8</td>\n","      <td>0.631172</td>\n","      <td>0.354786</td>\n","      <td>0.002457</td>\n","      <td>0.011467</td>\n","      <td>0.000117</td>\n","      <td>8546.0</td>\n","      <td>WI</td>\n","      <td>Price County</td>\n","      <td>8.221704</td>\n","      <td>40.409630</td>\n","      <td>34.886429</td>\n","      <td>16.482237</td>\n","      <td>2020-12-13</td>\n","      <td>Price County</td>\n","      <td>WI</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1118552 rows × 35 columns</p>\n","</div>"],"text/plain":["          FIPS  ... Metro_status\n","0         1123  ...            1\n","1         1123  ...            1\n","2         1123  ...            1\n","3         1123  ...            1\n","4         1123  ...            1\n","...        ...  ...          ...\n","1118547  55099  ...            1\n","1118548  55099  ...            1\n","1118549  55099  ...            1\n","1118550  55099  ...            1\n","1118551  55099  ...            1\n","\n","[1118552 rows x 35 columns]"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sZGmLIv9HLN7","executionInfo":{"status":"ok","timestamp":1638638126053,"user_tz":300,"elapsed":27,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"ae5d891a-9aea-4383-a7ad-00f3508b1af7"},"source":["time[(time['Date']=='2021-11-15') & (time['Series_Complete_Pop_Pct']==time['Series_Complete_Pop_Pct'].max()) & (time['Series_Complete_Pop_Pct']>=2)]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FIPS</th>\n","      <th>county_name</th>\n","      <th>State_x</th>\n","      <th>HESITANT_UNS</th>\n","      <th>HESITANT_S</th>\n","      <th>SVI</th>\n","      <th>Hispanic</th>\n","      <th>AIAN</th>\n","      <th>Asian</th>\n","      <th>Black</th>\n","      <th>NHPI</th>\n","      <th>White</th>\n","      <th>County_x</th>\n","      <th>State_y</th>\n","      <th>POPDEN</th>\n","      <th>County_y</th>\n","      <th>Unemp_rate</th>\n","      <th>REPUBLICAN</th>\n","      <th>DEMOCRAT</th>\n","      <th>OTHER</th>\n","      <th>LIBERTARIAN</th>\n","      <th>GREEN</th>\n","      <th>Total</th>\n","      <th>State</th>\n","      <th>County</th>\n","      <th>LHSD</th>\n","      <th>HSD</th>\n","      <th>CAD</th>\n","      <th>BDH</th>\n","      <th>Date</th>\n","      <th>Recip_County</th>\n","      <th>Recip_State</th>\n","      <th>Series_Complete_Pop_Pct</th>\n","      <th>Administered_Dose1_Pop_Pct</th>\n","      <th>Metro_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["Empty DataFrame\n","Columns: [FIPS, county_name, State_x, HESITANT_UNS, HESITANT_S, SVI, Hispanic, AIAN, Asian, Black, NHPI, White, County_x, State_y, POPDEN, County_y, Unemp_rate, REPUBLICAN, DEMOCRAT, OTHER, LIBERTARIAN, GREEN, Total, State, County, LHSD, HSD, CAD, BDH, Date, Recip_County, Recip_State, Series_Complete_Pop_Pct, Administered_Dose1_Pop_Pct, Metro_status]\n","Index: []"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","metadata":{"id":"Dqm3CufkJfEZ"},"source":["largestM = time[(time['Date']=='2021-11-20') &  (time['Series_Complete_Pop_Pct']>=2) & (time['Metro_status']==0)]['Series_Complete_Pop_Pct'].nlargest(5)\n","smallestM = time[(time['Date']=='2021-11-20') &  (time['Series_Complete_Pop_Pct']>=2) & (time['Metro_status']==0)]['Series_Complete_Pop_Pct'].nsmallest(5)\n","largestNM = time[(time['Date']=='2021-11-20') &  (time['Series_Complete_Pop_Pct']>=2) & (time['Metro_status']==1)]['Series_Complete_Pop_Pct'].nlargest(5)\n","smallestNM = time[(time['Date']=='2021-11-20') &  (time['Series_Complete_Pop_Pct']>=2) & (time['Metro_status']==1)]['Series_Complete_Pop_Pct'].nsmallest(5)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vYomR59ZL4Jo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638638126555,"user_tz":300,"elapsed":525,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"ac5f4df8-b075-4985-8553-12f77afd55d1"},"source":["for i in range(len(largestM)):\n","  a=time.iloc[largestM.index[i]]\n","  print(a[['FIPS','County', 'Series_Complete_Pop_Pct','Metro_status']])\n","\n","for i in range(len(smallestM)):\n","  a = time.iloc[smallestM.index[i]]\n","  print(a[['FIPS','County', 'Series_Complete_Pop_Pct','Metro_status']])\n","\n","for i in range(len(largestNM)):\n","  a=time.iloc[largestNM.index[i]]\n","  print(a[['FIPS','County', 'Series_Complete_Pop_Pct','Metro_status']])\n","\n","for i in range(len(smallestNM)):\n","  a = time.iloc[smallestNM.index[i]]\n","  print(a[['FIPS','County', 'Series_Complete_Pop_Pct','Metro_status']])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["FIPS                                      13053\n","County                     Chattahoochee County\n","Series_Complete_Pop_Pct                    99.9\n","Metro_status                                  0\n","Name: 203289, dtype: object\n","FIPS                                 51740\n","County                     Portsmouth city\n","Series_Complete_Pop_Pct               84.9\n","Metro_status                             0\n","Name: 1046653, dtype: object\n","FIPS                                       22125\n","County                     West Feliciana Parish\n","Series_Complete_Pop_Pct                       83\n","Metro_status                                   0\n","Name: 456761, dtype: object\n","FIPS                               6041\n","County                     Marin County\n","Series_Complete_Pop_Pct            79.1\n","Metro_status                          0\n","Name: 147041, dtype: object\n","FIPS                                   23005\n","County                     Cumberland County\n","Series_Complete_Pop_Pct                 78.9\n","Metro_status                               0\n","Name: 496277, dtype: object\n","FIPS                                   25001\n","County                     Barnstable County\n","Series_Complete_Pop_Pct                  5.5\n","Metro_status                               0\n","Name: 513365, dtype: object\n","FIPS                             54105\n","County                     Wirt County\n","Series_Complete_Pop_Pct            6.5\n","Metro_status                         0\n","Name: 1115361, dtype: object\n","FIPS                             13183\n","County                     Long County\n","Series_Complete_Pop_Pct              8\n","Metro_status                         0\n","Name: 258469, dtype: object\n","FIPS                                 54051\n","County                     Marshall County\n","Series_Complete_Pop_Pct                 11\n","Metro_status                             0\n","Name: 1076557, dtype: object\n","FIPS                               13173\n","County                     Lanier County\n","Series_Complete_Pop_Pct             12.1\n","Metro_status                           0\n","Name: 257045, dtype: object\n","FIPS                                      2060\n","County                     Bristol Bay Borough\n","Series_Complete_Pop_Pct                   94.3\n","Metro_status                                 1\n","Name: 115357, dtype: object\n","FIPS                                    4023\n","County                     Santa Cruz County\n","Series_Complete_Pop_Pct                 92.6\n","Metro_status                               1\n","Name: 120697, dtype: object\n","FIPS                                  8111\n","County                     San Juan County\n","Series_Complete_Pop_Pct               88.5\n","Metro_status                             1\n","Name: 238889, dtype: object\n","FIPS                              56039\n","County                     Teton County\n","Series_Complete_Pop_Pct            83.1\n","Metro_status                          1\n","Name: 1086169, dtype: object\n","FIPS                                 48377\n","County                     Presidio County\n","Series_Complete_Pop_Pct               80.9\n","Metro_status                             1\n","Name: 66941, dtype: object\n","FIPS                              25007\n","County                     Dukes County\n","Series_Complete_Pop_Pct             3.7\n","Metro_status                          1\n","Name: 514789, dtype: object\n","FIPS                                  54017\n","County                     Doddridge County\n","Series_Complete_Pop_Pct                 4.7\n","Metro_status                              1\n","Name: 1100053, dtype: object\n","FIPS                               54091\n","County                     Taylor County\n","Series_Complete_Pop_Pct              4.7\n","Metro_status                           1\n","Name: 1107529, dtype: object\n","FIPS                              54087\n","County                     Roane County\n","Series_Complete_Pop_Pct             5.3\n","Metro_status                          1\n","Name: 1082965, dtype: object\n","FIPS                               54065\n","County                     Morgan County\n","Series_Complete_Pop_Pct              5.7\n","Metro_status                           1\n","Name: 1094357, dtype: object\n"]}]},{"cell_type":"code","metadata":{"id":"y-G65x3-clQE"},"source":["# a=time.iloc[largestM.index[0]]\n","# print(a)\n","# a=time.iloc[smallestM.index[0]]\n","# print(a)\n","# a=time.iloc[largestNM.index[0]]\n","# print(a)\n","# a=time.iloc[smallestNM.index[0]]\n","# print(a)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HuHze0C9AO2N","executionInfo":{"status":"ok","timestamp":1638638126556,"user_tz":300,"elapsed":27,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"e317e86c-9823-46b3-f08a-f91e58e485f8"},"source":["time[(time['Date']=='2021-12-01')&(time['Series_Complete_Pop_Pct']>=50)& (time['Series_Complete_Pop_Pct']<=60)]['Series_Complete_Pop_Pct'].nlargest(20)\n","# time[time['Series_Complete_Pop_Pct'].max()>=50]['Series_Complete_Pop_Pct'].nlargest(100)\n","time.iloc[602436]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["FIPS                                          29087\n","county_name                   Holt County, Missouri\n","State_x                                    MISSOURI\n","HESITANT_UNS                                 0.2059\n","HESITANT_S                                     0.09\n","SVI                                             0.2\n","Hispanic                                     0.0106\n","AIAN                                         0.0099\n","Asian                                        0.0065\n","Black                                        0.0106\n","NHPI                                         0.0005\n","White                                        0.9583\n","County_x                                Holt County\n","State_y                                    Missouri\n","POPDEN                                      3.71839\n","County_y                            Holt County, MO\n","Unemp_rate                                      3.4\n","REPUBLICAN                                 0.843363\n","DEMOCRAT                                   0.144259\n","OTHER                                   0.000426803\n","LIBERTARIAN                              0.00981647\n","GREEN                                    0.00213402\n","Total                                          2343\n","State                                            MO\n","County                                  Holt County\n","LHSD                                         8.9302\n","HSD                                           43.31\n","CAD                                         28.1012\n","BDH                                         19.6586\n","Date                            2021-09-10 00:00:00\n","Recip_County                            Holt County\n","Recip_State                                      MO\n","Series_Complete_Pop_Pct                        34.7\n","Administered_Dose1_Pop_Pct                     39.4\n","Metro_status                                      1\n","Name: 602436, dtype: object"]},"metadata":{},"execution_count":110}]},{"cell_type":"markdown","metadata":{"id":"gYE7EGU-LjFm"},"source":["##ARIMA ANALYSIS FOR 5 COUNTIES"]},{"cell_type":"code","metadata":{"id":"7DVkS6baGeA-"},"source":["brevard = time[time['FIPS']==12009].copy(deep=True)\n","san_b = time[time['FIPS']==6071].copy(deep=True)\n","bethel = time[time['FIPS']==2050].copy(deep=True)\n","dewey = time[time['FIPS']==30063].copy(deep=True)\n","marshall = time[time['FIPS']==19127].copy(deep=True)\n","\n","anp = [brevard, san_b, marshall, dewey, marshall]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VwiIGizjZ58W"},"source":["for i in range((len(anp))):\n","  daa = anp[i]\n","  daa.sort_values(by='Date',ascending=True, inplace=True)\n","  anp[i] = daa"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B7OYq8OeGkSQ","executionInfo":{"status":"ok","timestamp":1638638126558,"user_tz":300,"elapsed":25,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"ca2f8285-df4b-430b-e857-f5b827e74c3f"},"source":["brevard.set_index('Date',inplace=True)\n","brevard['Series_Complete_Pop_Pct'].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e714dcb90>"]},"metadata":{},"execution_count":113},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EXRGgPiRI-Zq","executionInfo":{"status":"ok","timestamp":1638638126559,"user_tz":300,"elapsed":23,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"8d49c75b-25b1-421b-d7a4-4ade355ef574"},"source":["\n","marshall.set_index('Date',inplace=True)\n","marshall['Series_Complete_Pop_Pct'].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e713f0fd0>"]},"metadata":{},"execution_count":114},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tap6sbprI8hL","executionInfo":{"status":"ok","timestamp":1638638126857,"user_tz":300,"elapsed":317,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"b9c4b2a4-0573-4c07-abe8-76f8257e2555"},"source":["\n","dewey.set_index('Date',inplace=True)\n","dewey['Series_Complete_Pop_Pct'].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e712c2e50>"]},"metadata":{},"execution_count":115},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EyGBLMdRI4ZM","executionInfo":{"status":"ok","timestamp":1638638126858,"user_tz":300,"elapsed":16,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"67bd9073-088d-4411-b4ed-6702d71eacd7"},"source":["san_b.set_index('Date',inplace=True)\n","san_b['Series_Complete_Pop_Pct'].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e71159050>"]},"metadata":{},"execution_count":116},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uLeOUeA5I7GF","executionInfo":{"status":"ok","timestamp":1638638127162,"user_tz":300,"elapsed":315,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"af79f1e4-283e-406f-c1d1-e22b297ffad4"},"source":["bethel.set_index('Date',inplace=True)\n","bethel['Series_Complete_Pop_Pct'].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4e7105dc50>"]},"metadata":{},"execution_count":117},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"K_XGT00u2g5u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638638127543,"user_tz":300,"elapsed":392,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"f1856cc7-b439-43e1-9c9b-d1933ddfe660"},"source":["from statsmodels.tsa.stattools import adfuller\n","def ad_test(dataset):\n","      dftest = adfuller(dataset['Series_Complete_Pop_Pct'], autolag = 'AIC')\n","      print(\"1. ADF : \",dftest[0])\n","      print(\"2. P-Value : \", dftest[1])\n","      # print(\"3. Num Of Lags : \", dftest[2])\n","      # print(\"4. Num Of Observations Used For ADF Regression:\",      dftest[3])\n","      # print(\"5. Critical Values :\")\n","      # for key, val in dftest[4].items():\n","        # print(\"\\t\",key, \": \", val)\n","      return dftest[1]\n","\n","for i in range(len(anp)):\n","  m_data = anp[i]\n","  ad_test(m_data)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1. ADF :  -1.7885838013419253\n","2. P-Value :  0.386144067861395\n","1. ADF :  -2.1583187597052795\n","2. P-Value :  0.22171946737452408\n","1. ADF :  -1.5647999300482665\n","2. P-Value :  0.5012474660795719\n","1. ADF :  -1.9855439150305614\n","2. P-Value :  0.29294733715756494\n","1. ADF :  -1.5647999300482665\n","2. P-Value :  0.5012474660795719\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MFK5pPFUq3Qi","executionInfo":{"status":"ok","timestamp":1638638150829,"user_tz":300,"elapsed":23288,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"e7974f76-65a6-4cd1-b6f1-d3f8a1fbde9f"},"source":["from pmdarima import auto_arima\n","sf= []\n","def autoarima(dataset):\n","  stepwise_fit = auto_arima(dataset['Series_Complete_Pop_Pct'], trace=True, suppress_warnings=True)\n","  sf.append(stepwise_fit.order)\n","\n","for i in range(len(anp)):\n","  m_data = anp[i]\n","  autoarima(m_data)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=-126.892, Time=0.45 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=160.036, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=-34.906, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=-111.409, Time=0.08 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=-127.927, Time=0.22 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=-122.131, Time=0.13 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=-125.851, Time=0.18 sec\n"," ARIMA(1,2,3)(0,0,0)[0]             : AIC=-127.310, Time=0.34 sec\n"," ARIMA(0,2,3)(0,0,0)[0]             : AIC=-127.515, Time=0.16 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=-128.764, Time=0.16 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=-64.470, Time=0.08 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=-127.036, Time=0.23 sec\n"," ARIMA(3,2,0)(0,0,0)[0]             : AIC=-76.588, Time=0.10 sec\n"," ARIMA(3,2,2)(0,0,0)[0]             : AIC=-124.765, Time=0.32 sec\n"," ARIMA(2,2,1)(0,0,0)[0] intercept   : AIC=-126.797, Time=0.43 sec\n","\n","Best model:  ARIMA(2,2,1)(0,0,0)[0]          \n","Total fit time: 2.965 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=-476.920, Time=0.40 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=-264.970, Time=0.05 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=-375.293, Time=0.06 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=-481.899, Time=0.07 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=-480.442, Time=0.13 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=-480.438, Time=0.15 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=-478.814, Time=0.41 sec\n"," ARIMA(0,2,1)(0,0,0)[0] intercept   : AIC=-479.960, Time=0.25 sec\n","\n","Best model:  ARIMA(0,2,1)(0,0,0)[0]          \n","Total fit time: 1.544 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=41.357, Time=0.38 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=220.013, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=133.948, Time=0.05 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=39.827, Time=0.07 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=39.297, Time=0.11 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=40.846, Time=0.16 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=41.142, Time=0.25 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=39.523, Time=0.11 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=114.210, Time=0.06 sec\n"," ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=41.271, Time=0.29 sec\n","\n","Best model:  ARIMA(1,2,1)(0,0,0)[0]          \n","Total fit time: 1.509 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=-41.607, Time=0.38 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=168.353, Time=0.03 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=99.264, Time=0.04 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=-18.648, Time=0.11 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=-15.599, Time=0.11 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=-19.751, Time=0.13 sec\n"," ARIMA(3,2,2)(0,0,0)[0]             : AIC=-24.059, Time=0.45 sec\n"," ARIMA(2,2,3)(0,0,0)[0]             : AIC=-17.334, Time=0.65 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=-16.887, Time=0.11 sec\n"," ARIMA(1,2,3)(0,0,0)[0]             : AIC=-32.790, Time=0.35 sec\n"," ARIMA(3,2,1)(0,0,0)[0]             : AIC=-23.993, Time=0.21 sec\n"," ARIMA(3,2,3)(0,0,0)[0]             : AIC=-46.498, Time=0.70 sec\n"," ARIMA(4,2,3)(0,0,0)[0]             : AIC=-51.716, Time=0.85 sec\n"," ARIMA(4,2,2)(0,0,0)[0]             : AIC=-58.650, Time=0.95 sec\n"," ARIMA(4,2,1)(0,0,0)[0]             : AIC=-31.417, Time=0.24 sec\n"," ARIMA(5,2,2)(0,0,0)[0]             : AIC=-46.014, Time=0.92 sec\n"," ARIMA(5,2,1)(0,0,0)[0]             : AIC=-51.171, Time=0.35 sec\n"," ARIMA(5,2,3)(0,0,0)[0]             : AIC=-70.162, Time=1.00 sec\n"," ARIMA(5,2,4)(0,0,0)[0]             : AIC=-74.560, Time=1.13 sec\n"," ARIMA(4,2,4)(0,0,0)[0]             : AIC=-60.171, Time=1.18 sec\n"," ARIMA(5,2,5)(0,0,0)[0]             : AIC=-79.500, Time=1.31 sec\n"," ARIMA(4,2,5)(0,0,0)[0]             : AIC=-65.858, Time=1.38 sec\n"," ARIMA(5,2,5)(0,0,0)[0] intercept   : AIC=-77.079, Time=2.18 sec\n","\n","Best model:  ARIMA(5,2,5)(0,0,0)[0]          \n","Total fit time: 14.792 seconds\n","Performing stepwise search to minimize aic\n"," ARIMA(2,2,2)(0,0,0)[0]             : AIC=41.357, Time=0.37 sec\n"," ARIMA(0,2,0)(0,0,0)[0]             : AIC=220.013, Time=0.02 sec\n"," ARIMA(1,2,0)(0,0,0)[0]             : AIC=133.948, Time=0.05 sec\n"," ARIMA(0,2,1)(0,0,0)[0]             : AIC=39.827, Time=0.07 sec\n"," ARIMA(1,2,1)(0,0,0)[0]             : AIC=39.297, Time=0.10 sec\n"," ARIMA(2,2,1)(0,0,0)[0]             : AIC=40.846, Time=0.17 sec\n"," ARIMA(1,2,2)(0,0,0)[0]             : AIC=41.142, Time=0.22 sec\n"," ARIMA(0,2,2)(0,0,0)[0]             : AIC=39.523, Time=0.11 sec\n"," ARIMA(2,2,0)(0,0,0)[0]             : AIC=114.210, Time=0.06 sec\n"," ARIMA(1,2,1)(0,0,0)[0] intercept   : AIC=41.271, Time=0.29 sec\n","\n","Best model:  ARIMA(1,2,1)(0,0,0)[0]          \n","Total fit time: 1.484 seconds\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GCy9AlfgQ93y","executionInfo":{"status":"ok","timestamp":1638638150830,"user_tz":300,"elapsed":30,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"0b0e4227-4101-4d77-bda2-3b5d82c9e8e4"},"source":["sf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(2, 2, 1), (0, 2, 1), (1, 2, 1), (5, 2, 5), (1, 2, 1)]"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","metadata":{"id":"lUFuurHkx7BP"},"source":["tr =[]\n","te =[]\n","def test_train(dataset):\n","  \n","  train=dataset.iloc[:-100]\n","  \n","  tr.append(train)\n","  test=dataset.iloc[-100:]\n","\n","  te.append(test)\n","for i in range(len(anp)):\n","  m_data = anp[i]\n","  test_train(m_data)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fkul3iSzyFTB","executionInfo":{"status":"ok","timestamp":1638638153052,"user_tz":300,"elapsed":2245,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"4a89fc96-9037-4f81-8bba-8f53014b3d45"},"source":["from statsmodels.tsa.arima.model import ARIMA\n","plt.figure(figsize=(20,10))\n","mod=[]\n","pa = []\n","def modfit(dataset, x):\n","  model=ARIMA(dataset['Series_Complete_Pop_Pct'],order=x)\n","  model=model.fit()\n","  mod.append(model)\n","  return model\n","  # model.summary()\n","\n","for i in range(len(anp)):\n","  m_data = anp[i]\n","  start=len(tr[i])\n","  end=len(tr[i])+len(te[i])+600\n","  pred=modfit(m_data, sf[i]).predict(start=start,end=end,typ='levels').rename(str(m_data['county_name'].unique()[0]))\n","  pred.plot(legend=True)\n","  pa.append(pred)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/base/model.py:606: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals\n","  ConvergenceWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n","/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/base/tsa_model.py:539: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  % freq, ValueWarning)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x720 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"of8f75e9Grpk"},"source":["# future_dates=model.make_future_dataframe(periods=100)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CfSvz4G1MpBU","executionInfo":{"status":"ok","timestamp":1638638153054,"user_tz":300,"elapsed":11,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"c034753c-00b1-4f7e-a9ad-1d48f1228a61"},"source":["pred[pred>=80].index.min()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp('2022-09-04 00:00:00', freq='D')"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q9OIkI65yzSh","executionInfo":{"status":"ok","timestamp":1638638153441,"user_tz":300,"elapsed":396,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"12660ea1-6b02-4339-9c04-c220e4972b98"},"source":["from sklearn.metrics import mean_squared_error\n","from math import sqrt\n","\n","def datee(p,t):\n","  dat = p[p>=80].index.min()\n","  fips = anp[i]['FIPS'].unique()\n","  county = anp[i]['county_name'].unique()\n","  print(dat, fips, county)\n","\n","for i in range(len(anp)):\n","  datee(pa[i], te[i])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-09-20 00:00:00 [12009] ['Brevard County, Florida']\n","2023-02-28 00:00:00 [6071] ['San Bernardino County, California']\n","2022-09-04 00:00:00 [19127] ['Marshall County, Iowa']\n","2022-08-17 00:00:00 [30063] ['Missoula County, Montana']\n","2022-09-04 00:00:00 [19127] ['Marshall County, Iowa']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wqj32Qs1fdNJ","executionInfo":{"status":"ok","timestamp":1638638153441,"user_tz":300,"elapsed":7,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"44d34098-b71f-4e1c-c7af-20047ff64cf1"},"source":["anp[0].columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['FIPS', 'county_name', 'State_x', 'HESITANT_UNS', 'HESITANT_S', 'SVI',\n","       'Hispanic', 'AIAN', 'Asian', 'Black', 'NHPI', 'White', 'County_x',\n","       'State_y', 'POPDEN', 'County_y', 'Unemp_rate', 'REPUBLICAN', 'DEMOCRAT',\n","       'OTHER', 'LIBERTARIAN', 'GREEN', 'Total', 'State', 'County', 'LHSD',\n","       'HSD', 'CAD', 'BDH', 'Recip_County', 'Recip_State',\n","       'Series_Complete_Pop_Pct', 'Administered_Dose1_Pop_Pct',\n","       'Metro_status'],\n","      dtype='object')"]},"metadata":{},"execution_count":126}]},{"cell_type":"markdown","metadata":{"id":"R3rNbBlOje3z"},"source":["##Prophet"]},{"cell_type":"code","metadata":{"id":"PCG_B3dQjhEG"},"source":["# pip install pystan"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Kmic7gYQjuV9"},"source":["# pip install prophet"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7A41VDPKkOMF","executionInfo":{"status":"ok","timestamp":1638638194342,"user_tz":300,"elapsed":40904,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"c72645fd-7355-4300-ec39-ca0f94a039a0"},"source":["import fbprophet\n","from fbprophet import Prophet\n","# Initialize the Model\n","phd = []\n","def proph(dataset):\n","  model=Prophet()\n","  pny = dataset.copy(deep=True)\n","  pny.reset_index(inplace=True)\n","  pny.rename({'Date':'ds', 'Series_Complete_Pop_Pct':'y'}, axis = 1, inplace=True)\n","  testd = pny[-100:]\n","  pny=pny[:-100]\n","  model.fit(pny)\n","  future_dates=model.make_future_dataframe(periods=1000)\n","  prediction=model.predict(future_dates)\n","  dateee= prediction[prediction['yhat']>=80]['ds'].min()\n","  phd.append(dateee)\n","  print(prediction[prediction['yhat']>=80]['ds'].min())\n","  prediction=model.predict(future_dates)\n","  print(m_data['county_name'].unique()[0])\n","  model.plot(prediction, xlabel=m_data['county_name'].unique()[0])\n","  # testd.set_index('ds', inplace=True)\n","  # dataset.plot(legend=True)\n","for i in range(len(anp)):\n","  m_data = anp[i]\n","  proph(m_data)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n","INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["2022-07-27 00:00:00\n"]},{"output_type":"stream","name":"stderr","text":["INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n","INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Brevard County, Florida\n","2022-09-24 00:00:00\n"]},{"output_type":"stream","name":"stderr","text":["INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n","INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["San Bernardino County, California\n","2022-10-08 00:00:00\n"]},{"output_type":"stream","name":"stderr","text":["INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n","INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Marshall County, Iowa\n","2023-06-02 00:00:00\n"]},{"output_type":"stream","name":"stderr","text":["INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n","INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Missoula County, Montana\n","2022-10-08 00:00:00\n","Marshall County, Iowa\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5fN53k0ckjNM","executionInfo":{"status":"ok","timestamp":1638638194343,"user_tz":300,"elapsed":10,"user":{"displayName":"Ayush Dayani","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13412698610133454745"}},"outputId":"57b05339-f4ab-4243-f8cc-a9b3ba267b81"},"source":["i=0\n","for item in phd:\n","  print(anp[i]['county_name'].unique()[0],item)\n","  i+=1\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Brevard County, Florida 2022-07-27 00:00:00\n","San Bernardino County, California 2022-09-24 00:00:00\n","Marshall County, Iowa 2022-10-08 00:00:00\n","Missoula County, Montana 2023-06-02 00:00:00\n","Marshall County, Iowa 2022-10-08 00:00:00\n"]}]}]}